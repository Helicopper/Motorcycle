{"remainingRequest":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/sun.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/sun.vue","mtime":1550394936133},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar echarts = require('echarts');\n\nexport default {\n  name: \"sun\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"test\";\n      }\n    }\n  },\n  data: function data() {\n    return {// tabItem:\"Paper\"\n    };\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  // watch:{\n  //     items:function() {\n  //         // this.draw_linefold();\n  //         console.log(\"watch items:\"+ items);\n  //     },\n  //     deep:true\n  // },\n  // updated:function() {\n  //     this.$nextTick(function(){\n  //         console.log(\"updated!\");\n  //         this.start_draw();\n  //     })\n  // },\n  methods: {\n    start_draw: function start_draw() {\n      // let key = [];\n      // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n      var itemData = this.items; // console.log(\"itemData=\"+JSON.stringify(itemData));\n\n      for (var i in itemData) {\n        // console.log(\"key :\"+this.keyWord+\"_\"+i);\n        var id = this.keyWord + \"_\" + i; // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n\n        this.draw_sun(id, itemData[i][\"data\"]);\n      }\n    },\n    draw_sun: function draw_sun(id, data) {\n      var chart = document.getElementById(id); // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n\n      var initial = function initial() {\n        // 根据想要的效果调整的公式，不是固定的\n        chart.style.width = window.innerWidth / 4 + 80 + \"px\"; // console.log(\"initial!!\")\n      };\n\n      initial();\n      var myChart = echarts.init(chart);\n      var option = {\n        title: {\n          text: \"title\",\n          // subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\n          textStyle: {\n            fontSize: 14,\n            align: 'center'\n          } // subtextStyle: {\n          //     align: 'center'\n          // },\n          // sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\n\n        },\n        tooltip: {\n          trigger: 'item',\n          backgroundColor: 'rgba(0,0,250,0.2)',\n          formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n        },\n        series: {\n          type: 'sunburst',\n          highlightPolicy: 'ancestor',\n          data: data,\n          radius: [0, '95%'],\n          sort: null,\n          levels: [{}, {\n            r0: '0%',\n            r: '35%',\n            itemStyle: {\n              borderWidth: 2\n            },\n            label: {\n              rotate: 'tangential'\n            }\n          }, {\n            r0: '40%',\n            r: '48%',\n            label: {\n              //align: 'right',\n              position: 'outside',\n              padding: 3\n            },\n            itemStyle: {\n              borderWidth: 4\n            }\n          }]\n        },\n        color: [\"#60acfc\", \"#32d3eb\", \"#5bc49f\", \"#feb64d\", \"#ff7c7c\", \"#9287e7\"]\n      };\n      myChart.setOption(option); // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n      // window.onresize = function(){\n      //     console.log(\"window resize!\")\n      //     initial();\n      //     myChart.resize();\n      //     console.log(\"myChart resize!\")\n      // }\n      // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n\n      window.addEventListener('resize', function () {\n        initial();\n        myChart.resize();\n      }); // 这种写法无法实现自适应，不知道为什么\n      // window.onresize = (\"resize\",function() {\n      //     initial();\n      //     echart.resize()\n      // })\n\n      myChart.on(\"click\", function (params) {\n        //console.log(params);\n        window.open(\"https://www.baidu.com/baidu?wd=\" + params.seriesName);\n      });\n    }\n  }\n};",{"version":3,"sources":["sun.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <!-- <p>{{index}},{{items[index][\"title\"]}}</p> -->\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs>\n</div>\n</template>\n<script>\n\n    let echarts = require('echarts');\n    export default {\n        name: \"sun\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                // let key = [];\n                // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (var i in itemData){\n                    // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_sun(id,itemData[i][\"data\"]);\n                }\n            },\n            draw_sun(id,data) {\n                let chart = document.getElementById(id);\n                // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n                var initial = function () {\n                    // 根据想要的效果调整的公式，不是固定的\n                    chart.style.width = (window.innerWidth/4)+80+\"px\";\n                    // console.log(\"initial!!\")\n                }\n                initial();\n                let myChart = echarts.init(chart);\n\n                const option = {\n                    title: {\n                        text: \"title\",\n                        // subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\n                        textStyle: {\n                            fontSize: 14,\n                            align: 'center'\n                        },\n                        // subtextStyle: {\n                        //     align: 'center'\n                        // },\n                        // sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\n                    },\n                    tooltip: {\n                        trigger: 'item',\n                        backgroundColor : 'rgba(0,0,250,0.2)',\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                    },\n                    series: {\n                        type: 'sunburst',\n                        highlightPolicy: 'ancestor',\n                        data: data,\n                        radius: [0, '95%'],\n                        sort: null,\n                        levels: [{}, {\n                            r0: '0%',\n                            r: '35%',\n                            itemStyle: {\n                                borderWidth: 2\n                            },\n                            label: {\n                                rotate: 'tangential'\n                            }\n                        }, {\n                            r0: '40%',\n                            r: '48%',\n                            label: {\n                                //align: 'right',\n                                position:'outside',\n                                padding:3\n                            },\n                            itemStyle:{\n                                borderWidth:4\n                            }\n                        }]\n                    },\n                    color: [\"#60acfc\",\"#32d3eb\",\"#5bc49f\",\"#feb64d\",\"#ff7c7c\",\"#9287e7\"]\n                };\n\n                myChart.setOption(option);\n\n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n                // 这种写法无法实现自适应，不知道为什么\n                // window.onresize = (\"resize\",function() {\n                //     initial();\n                //     echart.resize()\n                // })\n                myChart.on(\"click\",function(params){\n                    //console.log(params);\n                    window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                })\n            }\n        }\n    }\n</script>\n<style>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n</style>"],"sourceRoot":"src/components/graphs"}]}