{"remainingRequest":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/relation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/relation.vue","mtime":1550571812883},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar echarts = require('echarts');\n\nexport default {\n  name: \"demandMap\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        console.log(\"key :\" + this.keyWord + \"_\" + i);\n        var id = this.keyWord + \"_\" + i;\n        this.draw_demandMap(id, itemData[i][\"data\"]);\n      }\n    },\n    transform_data: function transform_data(data) {\n      var result = [];\n\n      for (var index in data) {\n        var arr = []; // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n\n        var crela = data[index].correlation; // x不超过相关性的值\n\n        var x = Math.random() * crela; // 随机正负\n\n        x = x * (Math.random() > 0.5 ? 1 : -1); // 计算y\n\n        var y = Math.sqrt(crela * crela - x * x); // 随机正负\n\n        y = y * (Math.random() > 0.5 ? 1 : -1);\n        arr.push(x);\n        arr.push(y);\n        arr.push(data[index].name);\n        arr.push(data[index].value);\n        result.push(arr);\n      }\n\n      return result;\n    },\n    draw_demandMap: function draw_demandMap(id, data) {\n      // 初始化\n      var chart = document.getElementById(id);\n      var chart_width = chart.offsetWidth;\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\"; // chart.style.height = (chartParent.clientWidth - 30) + \"px\";\n\n        chart.style.margin = \"0 auto\";\n      };\n\n      initial(); // 色盘\n\n      var colors = [\"#D53A35\", \"#334B5C\", \"#D48265\", \"#9FDABF\", \"#7FAE90\", \"#DE9325\", \"#CFB2A9\", \"#797B7F\"]; // echarts 实例初始化\n\n      var myChart = echarts.init(chart);\n      var option = {\n        title: {\n          text: '知识图谱'\n        },\n        animationDurationUpdate: 1500,\n        animationEasingUpdate: 'quinticInOut',\n        tooltip: {\n          show: true\n        },\n        series: [{\n          type: 'graph',\n          // 布局类型\n          // layout: \"none\",\n          layout: 'circular',\n          // layout: 'force',\n          // force: {\n          //   repulsion: chart_width * 0.5,\n          //   gravity: 0.2,\n          //   edgeLength: [50, chart_width*0.6]\n          // },\n          // 位置\n          top: \"10%\",\n          bottom: \"10%\",\n          right: \"15%\",\n          left: \"15%\",\n          progressiveThreshold: 700,\n          roam: true,\n          focusNodeAdjacency: true,\n          // 点的数据  --------------------\n          data: data.node.map(function (node, index) {\n            return {\n              name: node.name,\n              value: node.value,\n              symbolSize: node.value,\n              // symbolSize: document.getElementById(\"main\").clientWidth / 30,\n              itemStyle: {\n                color: colors[index % colors.length],\n                // 透明度\n                opacity: 0.9\n              }\n            };\n          }),\n          // 边的数据  --------------------\n          links: data.links.map(function (links) {\n            return {\n              source: links.source,\n              target: links.target\n            };\n          }),\n          // 边两端标记\n          edgeSymbol: ['none', 'arrow'],\n          edgeSymbolSize: 15,\n          label: {\n            show: false // position: ['100%', '100%'],\n\n          },\n          lineStyle: {\n            width: 1,\n            curveness: 0.3,\n            opacity: 0.9\n          },\n          tooltip: {\n            formatter: function formatter(params) {\n              // 判断触发的类型是 node 还是 edge\n              if (params.dataType === \"node\") return params.data.name + \": \" + params.data.value;else if (params.dataType === \"edge\") {\n                return params.data.source + \" --> \" + params.data.target;\n              }\n            }\n          },\n          emphasis: {\n            label: {\n              show: true,\n              position: 'right',\n              fontSize: 18,\n              fontWeight: \"bold\"\n            },\n            itemStyle: {\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n              shadowBlur: 5,\n              opacity: 1\n            },\n            lineStyle: {\n              width: 1.5,\n              // color: \"#000\"\n              opacity: 1,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n              shadowBlur: 5\n            }\n          }\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial(); // chart.style.width = this.initial_style(chart);\n\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        if (params.dataType === \"node\") {\n          window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["relation.vue"],"names":[],"mappings":"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","sourcesContent":["// 关系图\n<template>\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  let echarts = require('echarts');\n  export default {\n    name: \"demandMap\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (var i in itemData) {\n          console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_demandMap(id, itemData[i][\"data\"]);\n        }\n      },\n      transform_data(data) {\n        let result = [];\n        for (let index in data) {\n          let arr = [];\n          // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n          let crela = data[index].correlation;\n          // x不超过相关性的值\n          let x = Math.random() * crela;\n          // 随机正负\n          x = x * (Math.random() > 0.5 ? 1 : -1);\n          // 计算y\n          let y = Math.sqrt(crela * crela - x * x);\n          // 随机正负\n          y = y * (Math.random() > 0.5 ? 1 : -1);\n\n          arr.push(x);\n          arr.push(y);\n          arr.push(data[index].name);\n          arr.push(data[index].value);\n          result.push(arr);\n        }\n        return result;\n      },\n      draw_demandMap(id, data) {\n        // 初始化\n        let chart = document.getElementById(id);\n        let chart_width = chart.offsetWidth;\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          // chart.style.height = (chartParent.clientWidth - 30) + \"px\";\n          chart.style.margin = \"0 auto\";\n        }\n        initial();\n\n        // 色盘\n        let colors = [\"#D53A35\", \"#334B5C\", \"#D48265\", \"#9FDABF\", \"#7FAE90\", \"#DE9325\", \"#CFB2A9\", \"#797B7F\"]\n        \n        // echarts 实例初始化\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: '知识图谱'\n          },\n          animationDurationUpdate: 1500,\n          animationEasingUpdate: 'quinticInOut',\n          tooltip: {\n            show: true,\n          },\n          series: [{\n            type: 'graph',\n            // 布局类型\n            // layout: \"none\",\n            layout: 'circular',\n            // layout: 'force',\n            // force: {\n            //   repulsion: chart_width * 0.5,\n            //   gravity: 0.2,\n            //   edgeLength: [50, chart_width*0.6]\n            // },\n            // 位置\n            top: \"10%\",\n            bottom: \"10%\",\n            right: \"15%\",\n            left: \"15%\",\n            progressiveThreshold: 700,\n            roam: true,\n            focusNodeAdjacency: true,\n            // 点的数据  --------------------\n            data: data.node.map(function (node, index) {\n              return {\n                name: node.name,\n                value: node.value,\n                symbolSize: node.value,\n                // symbolSize: document.getElementById(\"main\").clientWidth / 30,\n                itemStyle: {\n                  color: colors[index % colors.length],\n                  // 透明度\n                  opacity: 0.9\n                }\n              };\n            }),\n            // 边的数据  --------------------\n            links: data.links.map(function (links) {\n              return {\n                source: links.source,\n                target: links.target\n              };\n            }),\n            // 边两端标记\n            edgeSymbol: ['none', 'arrow'],\n            edgeSymbolSize: 15,\n            label: {\n              show: false,\n              // position: ['100%', '100%'],\n            },\n            lineStyle: {\n              width: 1,\n              curveness: 0.3,\n              opacity: 0.9\n            },\n            tooltip: {\n              formatter: function (params) {\n                // 判断触发的类型是 node 还是 edge\n                if (params.dataType === \"node\")\n                  return params.data.name + \": \" + params.data.value;\n                else if (params.dataType === \"edge\") {\n                  return params.data.source + \" --> \" + params.data.target;\n                }\n              }\n            },\n            emphasis: {\n              label: {\n                show: true,\n                position: 'right',\n                fontSize: 18,\n                fontWeight: \"bold\",\n              },\n              itemStyle: {\n                shadowColor: 'rgba(0, 0, 0, 0.5)',\n                shadowBlur: 5,\n                opacity: 1\n              },\n              lineStyle: {\n                width: 1.5,\n                // color: \"#000\"\n                opacity: 1,\n                shadowColor: 'rgba(0, 0, 0, 0.5)',\n                shadowBlur: 5,\n              }\n            },\n          }]\n        };\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          if (params.dataType === \"node\") {\n            window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n          }\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    max-height: 400px;\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"],"sourceRoot":"src/components/graphs"}]}