{"remainingRequest":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_river.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_river.vue","mtime":1555038228711},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"river\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        var id = this.keyWord + \"_\" + i;\n        this.draw_river(id, itemData[i]);\n      }\n    },\n    // 根据数据生成一个主干事件河流（时间贯穿始终）\n    transform_data: function transform_data(data) {\n      var result = data; // 第一个数据的名字label\n\n      var label = result[0][2];\n      var year_part = [];\n      var year_all = []; // 取出第一个label所有的年份，以及所有年份\n\n      for (var i = 0; i < result.length; i++) {\n        if (result[i][2] === label) {\n          year_part.push(result[i][0]);\n        }\n\n        ;\n\n        if (year_all.indexOf(result[i][0]) === -1) {\n          year_all.push(result[i][0]);\n        }\n\n        ;\n      }\n\n      for (var _i = 0; _i < year_all.length; _i++) {\n        if (year_part.indexOf(year_all[_i]) === -1) {\n          result.push([year_all[_i], 0, label]);\n        }\n      }\n\n      return result;\n    },\n    draw_river: function draw_river(id, data) {\n      // console.log(JSON.stringify(data))\n      var graph_title = data.title;\n      var graph_data = data.data; // console.log(graph_data);\n      // 初始化\n\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial(); // echarts 实例初始化\n\n      var myChart = echarts.init(chart);\n      var option = {\n        title: {\n          text: graph_title,\n          subtext: \"\",\n          x: \"1%\",\n          y: \"1%\"\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {\n              show: true,\n              type: \"png\",\n              pixelRatio: 3\n            },\n            restore: {\n              show: true\n            }\n          }\n        },\n        dataZoom: {\n          type: \"slider\",\n          start: 0,\n          end: 100,\n          // 数据缩放最小区域，百分比\n          minSpan: 30,\n          bottom: \"1%\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          // 悬浮框限制在容器内\n          // confine: true,\n          // enterable: true,\n          position: function position(pos, params, dom, rect, size) {\n            // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n            var obj = {\n              top: \"10%\"\n            };\n            obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n            return obj;\n          },\n          axisPointer: {\n            type: 'line',\n            lineStyle: {\n              color: 'rgba(0,0,0,0.5)',\n              width: 1,\n              type: 'solid'\n            }\n          }\n        },\n        legend: {\n          show: true,\n          type: \"scroll\",\n          // 纵向\n          // orient: 'vertical',\n          // right: \"5%\",\n          // left: \"80%\",\n          // left: \"2%\",\n          // right: \"19%\",\n          // top: \"5%\",\n          // bottom: \"5%\",\n          orient: 'horizontal',\n          left: \"2%\",\n          right: \"2%\",\n          top: \"10%\",\n          // top: \"\",\n          // 横向\n          tooltip: {\n            show: true\n          }\n        },\n        singleAxis: {\n          // right: \"22%\",\n          // left: \"5%\",\n          left: \"5%\",\n          right: \"5%\",\n          top: \"15%\",\n          bottom: \"20%\",\n          type: 'time',\n          min: 'dataMin',\n          max: 'dataMax',\n          axisTick: {\n            interval: 0\n          },\n          axisLabel: {\n            show: true,\n            showMinLabel: true,\n            showMaxLabel: true\n          },\n          axisPointer: {\n            animation: true,\n            label: {\n              show: true\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              type: 'dashed',\n              opacity: 0.2\n            }\n          }\n        },\n        series: [{\n          type: 'themeRiver',\n          label: {\n            show: false,\n            position: \"insideTopLeft\",\n            fontWeight: \"bold\",\n            fontSize: 12,\n            offset: [50, 0] // color: \"auto\"\n\n          },\n          itemStyle: {},\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 20,\n              shadowColor: 'rgba(0, 0, 0, 0.8)'\n            }\n          },\n          data: this.transform_data(graph_data)\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial(); // chart.style.width = this.initial_style(chart);\n\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {// console.log(params);\n        // window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n        // $search.to_display(params.data.name);\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_river.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 主题河流图 -->\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n    name: \"river\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (let i in itemData) {\n          let id = this.keyWord + \"_\" + i;\n          this.draw_river(id, itemData[i]);\n        }\n      },\n      // 根据数据生成一个主干事件河流（时间贯穿始终）\n      transform_data(data) {\n        let result = data;\n        // 第一个数据的名字label\n        let label = result[0][2];\n        let year_part = [];\n        let year_all = [];\n        // 取出第一个label所有的年份，以及所有年份\n        for (let i = 0; i < result.length; i++) {\n          if (result[i][2] === label) {\n            year_part.push(result[i][0])\n          };\n          if (year_all.indexOf(result[i][0]) === -1) {\n            year_all.push(result[i][0])\n          };\n        }\n        for (let i = 0; i < year_all.length; i++) {\n          if (year_part.indexOf(year_all[i]) === -1) {\n            result.push([year_all[i], 0, label]);\n          }\n        }\n        return result;\n      },\n      draw_river(id, data) {\n        // console.log(JSON.stringify(data))\n        let graph_title = data.title;\n        let graph_data = data.data;\n        // console.log(graph_data);\n\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          chart.style.margin = \"0 auto\";\n          chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n        }\n        initial();\n\n        // echarts 实例初始化\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: graph_title,\n            subtext: \"\",\n            x: \"1%\",\n            y: \"1%\",\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {\n                show: true,\n                type: \"png\",\n                pixelRatio: 3\n              },\n              restore: {\n                show: true\n              }\n            }\n          },\n          dataZoom: {\n            type: \"slider\",\n            start: 0,\n            end: 100,\n            // 数据缩放最小区域，百分比\n            minSpan: 30,\n            bottom: \"1%\",\n          },\n          tooltip: {\n            trigger: \"axis\",\n            // 悬浮框限制在容器内\n            // confine: true,\n            // enterable: true,\n            position: function (pos, params, dom, rect, size) {\n              // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n              var obj = {\n                top: \"10%\"\n              };\n              obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n              return obj;\n            },\n            axisPointer: {\n              type: 'line',\n              lineStyle: {\n                color: 'rgba(0,0,0,0.5)',\n                width: 1,\n                type: 'solid'\n              }\n            }\n          },\n          legend: {\n            show: true,\n            type: \"scroll\",\n            // 纵向\n            // orient: 'vertical',\n            // right: \"5%\",\n            // left: \"80%\",\n            // left: \"2%\",\n            // right: \"19%\",\n            // top: \"5%\",\n            // bottom: \"5%\",\n            orient: 'horizontal',\n            left: \"2%\",\n            right: \"2%\",\n            top: \"10%\",\n            // top: \"\",\n            // 横向\n            tooltip: {\n              show: true,\n            }\n          },\n          singleAxis: {\n            // right: \"22%\",\n            // left: \"5%\",\n            left: \"5%\",\n            right: \"5%\",\n            top: \"15%\",\n            bottom: \"20%\",\n            type: 'time',\n            min: 'dataMin',\n            max: 'dataMax',\n            axisTick: {\n              interval: 0\n            },\n            axisLabel: {\n              show: true,\n              showMinLabel: true,\n              showMaxLabel: true,\n            },\n            axisPointer: {\n              animation: true,\n              label: {\n                show: true\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                type: 'dashed',\n                opacity: 0.2\n              }\n            }\n          },\n          series: [{\n            type: 'themeRiver',\n            label: {\n              show: false,\n              position: \"insideTopLeft\",\n              fontWeight: \"bold\",\n              fontSize: 12,\n              offset: [50, 0]\n              // color: \"auto\"\n            },\n            itemStyle: {},\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.8)'\n              }\n            },\n            data: this.transform_data(graph_data)\n          }]\n        };\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          // console.log(params);\n          // window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n          // $search.to_display(params.data.name);\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* max-height: 400px; */\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"],"sourceRoot":"src/components/graphs"}]}