{"remainingRequest":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_pieline.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_pieline.vue","mtime":1551873133072},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"radar\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"test\";\n      }\n    }\n  },\n  data: function data() {\n    return {// tabItem:\"Paper\"\n    };\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  // watch:{\n  //     items:function() {\n  //         // this.draw_linefold();\n  //         console.log(\"watch items:\"+ items);\n  //     },\n  //     deep:true\n  // },\n  // updated:function() {\n  //     this.$nextTick(function(){\n  //         console.log(\"updated!\");\n  //         this.start_draw();\n  //     })\n  // },\n  methods: {\n    start_draw: function start_draw() {\n      // let key = [];\n      // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n      var itemData = this.items; // console.log(\"itemData=\"+JSON.stringify(itemData));\n\n      for (var i in itemData) {\n        // console.log(\"key :\"+this.keyWord+\"_\"+i);\n        var id = this.keyWord + \"_\" + i; // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n\n        this.draw_radar(id, itemData[i]);\n      }\n    },\n    draw_radar: function draw_radar(id, data) {\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        // 根据想要的效果调整的公式，不是固定的\n        // chart.style.width = (window.innerWidth/4)+80+\"px\";\n        // 获取 chart 的父父结点chartParent，再根据其算宽度\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial();\n      var myChart = echarts.init(chart);\n      var title = data['title'];\n      var graph_data = data['data'];\n      var source = []; //赋值给echarts的source\n\n      var series = []; //赋值给echarts的series\n\n      var xAxis = ['item']; //source中的第一行数据\n\n      var sourceInstance = []; //source中的除了第一行的其他数据\n\n      var j = 0; //计数器\n\n      var formatter = '';\n\n      for (var key in graph_data) {\n        //console.log('for start!');\n        //console.log(sourceInstance);\n        if (j != 0) {\n          source.push(sourceInstance);\n        }\n\n        sourceInstance = [];\n        sourceInstance.push(key);\n        var subdata = graph_data[key];\n\n        for (var i in subdata) {\n          if (j == 0) {\n            xAxis.push(i);\n          }\n\n          sourceInstance.push(subdata[i]);\n        }\n\n        if (j == 0) {\n          source.push(xAxis);\n          formatter = '{b}:{@' + xAxis[1] + '}({d}%)';\n        }\n\n        j++;\n        series.push({\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row'\n        });\n      }\n\n      series.push({\n        type: 'pie',\n        id: 'pie',\n        radius: '30%',\n        center: ['50%', '35%'],\n        label: {\n          //formatter : '{b}:{@2012}({d}%)';\n          formatter: formatter\n        },\n        encode: {\n          itemName: 'item',\n          value: xAxis[1],\n          tooltip: xAxis[1]\n        }\n      });\n      var option = {\n        title: {\n          text: title,\n          top: \"0%\"\n        },\n        legend: {\n          type: \"scroll\",\n          top: \"8%\",\n          left: \"1%\" // orient:\"vertical\"\n\n        },\n        tooltip: {\n          trigger: 'axis',\n          showContent: true\n        },\n        dataset: {\n          //source: [\n          //    ['product', '2012', '2013', '2014', '2015', '2016', '2017'],\n          //    ['Matcha Latte', 41.1, 30.4, 65.1, 53.3, 83.8, 98.7],\n          //    ['Milk Tea', 86.5, 92.1, 85.7, 83.1, 73.4, 55.1],\n          //    ['Cheese Cocoa', 24.1, 67.2, 79.5, 86.4, 65.2, 82.5],\n          //    ['Walnut Brownie', 55.2, 67.1, 69.2, 72.4, 53.9, 39.1]\n          //]\n          source: source\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false\n        },\n        yAxis: {\n          gridIndex: 0\n        },\n        grid: {\n          top: '62%',\n          bottom: \"5%\"\n        },\n        //series: [\n        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n        //{\n        //    type: 'pie',\n        //    id: 'pie',\n        //    radius: '30%',\n        //    center: ['50%', '25%'],\n        //    label: {\n        //        formatter: '{b}: {@2012} ({d}%)'\n        //    },\n        //    encode: {\n        //    itemName: 'product',\n        //        value: '2012',\n        //        tooltip: '2012'\n        //    }\n        //}\n        //]\n        series: series,\n        color: [\"#60acfc\", \"#32d3eb\", \"#5bc49f\", \"#feb64d\", \"#ff7c7c\", \"#9287e7\"]\n      };\n      myChart.on('updateAxisPointer', function (event) {\n        var xAxisInfo = event.axesInfo[0];\n\n        if (xAxisInfo) {\n          var dimension = xAxisInfo.value + 1;\n          myChart.setOption({\n            series: {\n              id: 'pie',\n              label: {\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n              },\n              encode: {\n                value: dimension,\n                tooltip: dimension\n              }\n            }\n          });\n        }\n      });\n      myChart.setOption(option); // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n      // window.onresize = function(){\n      //     console.log(\"window resize!\")\n      //     initial();\n      //     myChart.resize();\n      //     console.log(\"myChart resize!\")\n      // }\n      // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n\n      window.addEventListener('resize', function () {\n        initial();\n        myChart.resize();\n      }); // 这种写法无法实现自适应，不知道为什么\n      // window.onresize = (\"resize\",function() {\n      //     initial();\n      //     echart.resize()\n      // })\n\n      myChart.on(\"click\", function (params) {\n        console.log(params); // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n\n        if (params['componentSubType'] == 'pie') {\n          // $router.push({\n          //     path:\"/displayInfo\",\n          //     query:{query:params['name'].toLowerCase()}\n          // })\n          $search.to_display(params['name'].toLowerCase());\n        }\n\n        if (params['componentSubType'] == 'line') {\n          // $router.push({\n          //     path:\"/displayInfo\",\n          //     query:{query:params['seriesName'].toLowerCase()}\n          // })\n          $search.to_display(params['seriesName'].toLowerCase());\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_pieline.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <!-- <p>{{index}},{{items[index][\"title\"]}}</p> -->\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs>\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n    export default {\n        name: \"radar\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                // let key = [];\n                // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (var i in itemData){\n                    // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_radar(id,itemData[i]);\n                }\n            },\n            draw_radar(id,data) {\n                let chart = document.getElementById(id);\n                var initial = function () {\n                    // 根据想要的效果调整的公式，不是固定的\n                    // chart.style.width = (window.innerWidth/4)+80+\"px\";\n                    \n                    // 获取 chart 的父父结点chartParent，再根据其算宽度\n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                let title = data['title'];\n                let graph_data = data['data'];\n                var source = []; //赋值给echarts的source\n                var series = []; //赋值给echarts的series\n                var xAxis = ['item']; //source中的第一行数据\n                var sourceInstance = []; //source中的除了第一行的其他数据\n                var j=0; //计数器\n                var formatter = '';\n                for (var key in graph_data){\n                    //console.log('for start!');\n                    //console.log(sourceInstance);\n                    if(j!=0){source.push(sourceInstance);}\n                    sourceInstance = [];\n                    sourceInstance.push(key);\n                    var subdata = graph_data[key];\n                    for (var i in subdata){\n                        if(j==0){xAxis.push(i);}\n                        sourceInstance.push(subdata[i]);\n                    }\n                    if(j==0){source.push(xAxis);formatter='{b}:{@'+xAxis[1]+'}({d}%)'}\n                    j++;\n                    series.push(\n                        {type: 'line', smooth: true, seriesLayoutBy: 'row'}\n                    )\n                }\n                    series.push({\n                        type:'pie',\n                        id:'pie',\n                        radius:'30%',\n                        center:['50%','35%'],\n                        label:{\n                            //formatter : '{b}:{@2012}({d}%)';\n                            formatter:formatter\n                        },\n                        encode:{\n                            itemName:'item',\n                            value:xAxis[1],\n                            tooltip:xAxis[1]\n                        }\n                    })\n\n                const option = {\n                    title:{\n                        text:title,\n                        top:\"0%\"\n                    },\n                    legend: {\n                        type:\"scroll\",\n                        top:\"8%\",\n                        left:\"1%\",\n                      // orient:\"vertical\"\n                    },\n                    tooltip: {\n                        trigger: 'axis',\n                        showContent: true\n                    },\n                    dataset: {\n                        //source: [\n                        //    ['product', '2012', '2013', '2014', '2015', '2016', '2017'],\n                        //    ['Matcha Latte', 41.1, 30.4, 65.1, 53.3, 83.8, 98.7],\n                        //    ['Milk Tea', 86.5, 92.1, 85.7, 83.1, 73.4, 55.1],\n                        //    ['Cheese Cocoa', 24.1, 67.2, 79.5, 86.4, 65.2, 82.5],\n                        //    ['Walnut Brownie', 55.2, 67.1, 69.2, 72.4, 53.9, 39.1]\n                        //]\n                        source:source\n                    },\n                    xAxis: {type: 'category',boundaryGap: false},\n                    yAxis: {gridIndex: 0},\n                    grid: {\n                      top: '62%',\n                      bottom:\"5%\"\n                    },\n                    //series: [\n                        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n                        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n                        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n                        //{type: 'line', smooth: true, seriesLayoutBy: 'row'},\n                        //{\n                        //    type: 'pie',\n                        //    id: 'pie',\n                        //    radius: '30%',\n                        //    center: ['50%', '25%'],\n                        //    label: {\n                        //        formatter: '{b}: {@2012} ({d}%)'\n                        //    },\n                        //    encode: {\n                        //    itemName: 'product',\n                        //        value: '2012',\n                        //        tooltip: '2012'\n                        //    }\n                        //}\n\n                    //]\n                    series:series,\n                    color: [\"#60acfc\",\"#32d3eb\",\"#5bc49f\",\"#feb64d\",\"#ff7c7c\",\"#9287e7\"]\n                };\n            \n                myChart.on('updateAxisPointer', function (event) {\n                    var xAxisInfo = event.axesInfo[0];\n                    if (xAxisInfo) {\n                        var dimension = xAxisInfo.value + 1;\n                        myChart.setOption({\n                            series: {\n                                id: 'pie',\n                                label: {\n                                    formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                                },\n                                encode: {\n                                    value: dimension,\n                                    tooltip: dimension\n                                }\n                            }\n                        });\n                    }\n                });\n\n                myChart.setOption(option);\n\n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n                // 这种写法无法实现自适应，不知道为什么\n                // window.onresize = (\"resize\",function() {\n                //     initial();\n                //     echart.resize()\n                // })\n                myChart.on(\"click\",function(params){\n                    console.log(params);\n                    // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                    if(params['componentSubType'] == 'pie'){\n                        // $router.push({\n                        //     path:\"/displayInfo\",\n                        //     query:{query:params['name'].toLowerCase()}\n                        // })\n                        $search.to_display(params['name'].toLowerCase())\n                    }\n                    if(params['componentSubType'] == 'line'){\n                        // $router.push({\n                        //     path:\"/displayInfo\",\n                        //     query:{query:params['seriesName'].toLowerCase()}\n                        // })\n                        $search.to_display(params['seriesName'].toLowerCase())\n                    }\n                })\n            },\n            // set_color(){\n            //     let testcolor = [\"rgb(129, 212, 250)\",\"rgb(239, 154, 154)\",\"rgb(128, 203, 196)\",\"rgb(129, 199, 132)\",\"rgb(156, 204, 101)\",\"rgb(212, 225, 87)\",\"rgb(255, 213, 79)\",\"rgb(255, 167, 38)\",\"rgb(255, 110, 64)\",\"rgb(161, 136, 127)\",\"rgb(248, 187, 208)\",\"rgb(128, 203, 196)\",\"rgb(209, 196, 233)\"]\n            //     let num = Math.floor(Math.random() * testcolor.length);\n            //     return testcolor[num]\n            // }\n        }\n    }\n</script>\n<style>\n</style>"],"sourceRoot":"src/components/graphs"}]}