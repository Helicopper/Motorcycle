{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_geo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_geo.vue","mtime":1585902033000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["import _defineProperty from \"/ssd1/gfy/ai-project/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 直接导入地理图所需的json文件，注意一定记得register这个文件\nimport worldJson from 'echarts/map/json/world.json'; // import $router from '../../util/router' \n\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"geo\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"test\";\n      }\n    }\n  },\n  data: function data() {\n    return {// tabItem:\"Paper\"\n    };\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items; // console.log(\"itemData=\"+JSON.stringify(itemData));\n\n      for (var i in itemData) {\n        // console.log(\"key :\"+this.keyWord+\"_\"+i);\n        var id = this.keyWord + \"_\" + i; // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n\n        this.draw_geo(id, itemData[i]);\n      }\n    },\n    draw_geo: function draw_geo(id, data) {\n      var _option;\n\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial(); // let color = this.set_color();\n\n      var myChart = echarts.init(chart);\n      var title = data['title'];\n      var graph_data = data['data'];\n      var geoCoordMap = graph_data[\"location\"];\n      var influ = graph_data[\"influence\"];\n      echarts.registerMap('world', worldJson);\n      var influence = influ.sort(this.$graphs.sortNumber).slice(-100);\n\n      function sortNumber(a, b) {\n        return a.value[2] - b.value[2];\n      }\n\n      var convertData = [];\n\n      for (var i = 0; i < influence.length; i++) {\n        var geoCoord = geoCoordMap[influence[i].name];\n\n        if (geoCoord) {\n          convertData.push({\n            name: influence[i].name,\n            value: geoCoord.concat(influence[i].value)\n          });\n        }\n      } // convertData=convertData.sort(sortNumber);\n      // console.log(\"convertData====\"+JSON.stringify(convertData));\n\n\n      var data_max = 1;\n      var data_min = 100000;\n      var max_index = 0;\n\n      for (var i = 0; i < convertData.length; i++) {\n        if (convertData[i]['value'][2] > data_max) {\n          data_max = convertData[i]['value'][2];\n          max_index = i;\n        }\n\n        ;\n\n        if (convertData[i]['value'][2] < data_min) {\n          data_min = convertData[i]['value'][2];\n        }\n      }\n\n      ; //console.log(\"geoCoordMap\");\n      //console.log(geoCoordMap);\n      //console.log(\"geoCoordMap[[influence[max_index].name]]\");\n      //console.log(geoCoordMap[[influence[max_index].name]]);\n\n      var linesdata = [];\n\n      for (var i = 0; i < influence.length; i++) {\n        var coord = geoCoordMap[influence[i].name];\n        var temp = void 0; //temp\n\n        linesdata.push({\n          name: influence[i].name,\n          coords: [geoCoordMap[[influence[max_index].name]], coord]\n        });\n      }\n\n      console.log(\"linesdata\");\n      console.log(linesdata);\n      var option = (_option = {\n        title: {\n          text: title,\n          //subtext: '点击结点可查看该广告商的详细信息',\n          left: 'left',\n          //backgroundColor: 'rgba(0,0,0,0)',//标题背景颜色，默认'rgba(0,0,0,0)'透明\n          borderColor: '#778899',\n          //标题边框颜色\n          borderWidth: 5,\n          //标题边框线宽，单位px，默认为0（无边框）\n          padding: 5,\n          //标题内边距，单位px\n          textStyle: {\n            fontSize: 26\n          },\n          subtextStyle: {\n            fontSize: 20\n          },\n          zlevel: 2\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {\n              show: true,\n              type: \"png\",\n              pixelRatio: 3\n            },\n            restore: {\n              show: true\n            }\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: function formatter(data) {\n            if (data.seriesName == 'a') {\n              return data.marker + data.name + '：' + data.value[2];\n            }\n\n            return data.seriesName + '<br/>' + data.marker + data.name + '：' + data.value[2];\n          }\n        }\n      }, _defineProperty(_option, \"toolbox\", {\n        show: false,\n        orient: 'vertical',\n        x: 'right',\n        y: 'center',\n        feature: {\n          mark: {\n            show: true\n          },\n          dataView: {\n            show: true,\n            readOnly: false\n          },\n          restore: {\n            show: true\n          },\n          saveAsImage: {\n            show: true\n          }\n        }\n      }), _defineProperty(_option, \"visualMap\", {\n        min: data_min,\n        max: data_max,\n        calculable: true,\n        inRange: {\n          color: ['#50c9c3', '#50c9c3'] //opacity:0.3\n\n        },\n        range: [data_min, data_max],\n        textStyle: {\n          color: '#4E4E4E'\n        },\n        left: '5%',\n        bottom: '10%'\n      }), _defineProperty(_option, \"geo\", {\n        map: 'world',\n        center: [104.114129, 37.550339],\n        roam: true,\n        zoom: 5,\n        label: {\n          emphasis: {\n            show: false\n          }\n        },\n        itemStyle: {\n          normal: {\n            // areaColor: '#f3f3f3',\n            areaColor: \"#ffffff\",\n            // borderColor: '#111'\n            borderColor: '#C0B9B9'\n          },\n          emphasis: {\n            // areaColor: 'rgba(224, 31, 84, 0.2)'\n            areaColor: \"#60acfc\"\n          }\n        }\n      }), _defineProperty(_option, \"series\", [{\n        //name: 'Top 100',\n        type: 'effectScatter',\n        coordinateSystem: 'geo',\n        // data: convertData(influence.sort(function (a, b) {\n        //     return b.value - a.value;\n        // }).slice(0,10)),         \n        data: convertData,\n        symbol: 'circle',\n        symbolSize: function symbolSize(val) {\n          return 10 + (val[2] - data_min) / (data_max - data_min) * 50;\n        },\n        effectType: \"ripple\",\n        showEffectOn: 'render',\n        rippleEffect: {\n          brushType: 'stroke'\n        },\n        hoverAnimation: true,\n        label: {\n          normal: {\n            formatter: '{b}',\n            position: 'top',\n            show: false,\n            // color:'rgb(224,31,84)'\n            color: \"#4E4E4E\"\n          },\n          emphasis: {\n            formatter: '{b}',\n            position: 'top',\n            show: true,\n            color: \"#4E4E4E\",\n            backgroundColor: \"#fff\"\n          }\n        },\n        itemStyle: {\n          normal: {\n            // color: 'rgb(224, 31, 84)',\n            //color: \"#60acfc\",\n            //opacity:0.3,\n            shadowBlur: 2,\n            shadowColor: '#333',\n            borderWidth: 4\n          } //,\n          //zlevel: 1\n\n        }\n      }, {\n        type: 'lines',\n        data: linesdata,\n        symbol: ['none', 'arrow'],\n        symbolSize: 20,\n        coordinateSystem: 'geo',\n        lineStyle: {\n          normal: {\n            color: '#50c9c3',\n            width: 1,\n            opacity: 1,\n            curveness: -0.1\n          }\n        },\n        effect: {\n          show: true,\n          smooth: false,\n          period: 6,\n          trailLength: 0,\n          //特效尾迹的长度\n          symbol: \"arrow\",\n          color: '#50c9c3',\n          symbolSize: 10\n        },\n\n        /*\n         effect : {\n           \t\t\t\tshow: true,\n           \t\t\t\tscaleSize: 2,\n           \t\t\t\tperiod: 30,\n           \t\t\t\tcolor: '#fff',\n           \t\t\t\tshadowBlur: 10\n        \t\t\t},\n        */\n        smooth: true,\n        itemStyle: {\n          normal: {\n            borderWidth: 1,\n            lineStyle: {\n              type: 'solid' //shadowBlur: 2\n\n            }\n          }\n        }\n      }]), _option);\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial();\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        console.log(params.data.name);\n        $search.to_display3(\"2\" + \",\" + params.data.name);\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_geo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"hellotheworld\">\n\t<div class=\"wrap\">\n\t\t<aside class=\"left\">\n\t\t\t<p>figure2</p>\n\t\t\t<div class=\"name\">广告商地理分布</div>\n\t\t\t<ul>\n\t\t\t\t<li>类型：地理图</li>\n\t\t\t\t<li>点：广告商</li>\n\t\t\t\t<li>点的大小：影响力</li>\n\t\t\t</ul>\n\t\t\t<div class=\"texts\">图片描述：参与竞价[关键词]的广告商的地理分布。您可以通过此图地域性地划分市场，识别潜在客户，提高参与竞价[关键词]的广告商数量，为竞价流程注入新的活力与刺激。</div>\n\t\t</aside>\n\t\t<section class=\"right\">\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</section>\n\t</div>\n\t<div class=\"blank\"></div>\n  </div>\n</template>\n<script>\n// 直接导入地理图所需的json文件，注意一定记得register这个文件\nimport worldJson from 'echarts/map/json/world.json'\n// import $router from '../../util/router' \nimport $search from \"./../../util/search.js\"\n\n    let echarts = require('echarts');\n    export default {\n        name: \"geo\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n     \n        methods: {\n            start_draw() {\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (var i in itemData){\n                    // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_geo(id,itemData[i]);\n                }\n            },\n            draw_geo(id,data) {\n                let chart = document.getElementById(id);\n                var initial = function () {\n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n                // let color = this.set_color();\n                let myChart = echarts.init(chart);\n                let title = data['title'];\n                let graph_data = data['data'];\n                let geoCoordMap = graph_data[\"location\"];\n                let influ = graph_data[\"influence\"];\n             \n                echarts.registerMap('world', worldJson);\n                let influence = influ.sort(this.$graphs.sortNumber).slice(-100);\n\n\t\t\t\tfunction sortNumber(a,b)\n\t\t\t\t{\n\t\t\t\t\t\treturn a.value[2] - b.value[2];\n\t\t\t\t}\n                let convertData = [];\n                for (var i = 0; i < influence.length; i++) {\n                    var geoCoord = geoCoordMap[influence[i].name];\n                    if (geoCoord) {\n                        convertData.push({\n                            name: influence[i].name,\n                            value: geoCoord.concat(influence[i].value)\n                        });\n                    }\n                }\n               // convertData=convertData.sort(sortNumber);\n                // console.log(\"convertData====\"+JSON.stringify(convertData));\n\t\t\t\t\n                let data_max = 1;\n                let data_min = 100000;\n                let max_index=0;\n                for (var i = 0; i < convertData.length; i++) {\n                    if (convertData[i]['value'][2] > data_max){\n                        data_max = convertData[i]['value'][2];\n                        max_index = i;\n                    };\n                    if (convertData[i]['value'][2]< data_min){\n                        data_min = convertData[i]['value'][2];\n                    }\n                };\n                //console.log(\"geoCoordMap\");\n                //console.log(geoCoordMap);\n   \t\t\t\t//console.log(\"geoCoordMap[[influence[max_index].name]]\");\n                //console.log(geoCoordMap[[influence[max_index].name]]);\n                let linesdata=[];\n\n                for (var i = 0; i < influence.length; i++) {\n                    var coord = geoCoordMap[influence[i].name];\n                \n                    let temp;\n                    //temp\n                    linesdata.push({\n\n                    \t name: influence[i].name,\n                         coords: [geoCoordMap[[influence[max_index].name]],coord]\n                    })\n        \n                }\n                console.log(\"linesdata\");\n             \tconsole.log(linesdata);\n\n               \n                const option = {\n               \n                     title: {\n              \t\t\t\ttext: title,\n              \t\t\t\t//subtext: '点击结点可查看该广告商的详细信息',\n              \t\t\t\tleft: 'left',\n            \t\t\t\t//backgroundColor: 'rgba(0,0,0,0)',//标题背景颜色，默认'rgba(0,0,0,0)'透明\n            \t\t\t\tborderColor: '#778899',//标题边框颜色\n            \t\t\t\tborderWidth: 5,//标题边框线宽，单位px，默认为0（无边框）\n            \t\t\t\tpadding: 5,//标题内边距，单位px\n            \t\t\t\ttextStyle: {\n                \t\t\t\tfontSize: 26\n            \t\t\t\t},\n            \t\t\t\tsubtextStyle: {\n                \t\t\t\tfontSize: 20\n            \t\t\t\t},\n             \t\t\t\tzlevel:2\n\n          \t\t\t},\n                    toolbox: {\n                        show: true,\n                        feature: {\n                            saveAsImage: {\n                                show: true,\n                                type: \"png\",\n                                pixelRatio: 3\n                            },\n                            restore: {\n                                show: true\n                            }\n                        }\n                    },\n                    tooltip: {\n                        trigger: 'item',\n                        formatter: function (data) {\n                        if (data.seriesName == 'a'){\n                            return data.marker + data.name + '：' + data.value[2];\n                        }\n                        return data.seriesName + '<br/>' +data.marker + data.name + '：' + data.value[2];\n                        }\n                    },\n                    toolbox: {\n                        show: false,\n                        orient: 'vertical',\n                        x: 'right',\n                        y: 'center',\n                        feature: {\n                            mark: { show: true },\n                            dataView: { show: true, readOnly: false },\n                            restore: { show: true },\n                            saveAsImage: { show: true }\n                        }\n                    },\n                    visualMap: {\n                        min: data_min,\n                        max: data_max,\n                        calculable: true,\n                        inRange: {\n                            color: ['#50c9c3', '#50c9c3'],\n                            //opacity:0.3\n                        },\n                        range:[data_min, data_max],\n                        textStyle: {\n                            color: '#4E4E4E'\n                        },\n                        left: '5%',\n                        bottom: '10%'\n                    },\n                    geo: {\n                        map: 'world',\n                       \n                        center: [104.114129, 37.550339],\n                        roam: true,\n                        zoom:5,\n                        label: {\n                            emphasis: {\n                                show: false\n                            }\n                        },\n                        itemStyle: {\n                            normal: {\n                                // areaColor: '#f3f3f3',\n                                areaColor:\"#ffffff\",\n                                // borderColor: '#111'\n                                borderColor: '#C0B9B9'\n                            },\n                            emphasis: {\n                                // areaColor: 'rgba(224, 31, 84, 0.2)'\n                                areaColor: \"#60acfc\",\n                            }\n                        }\n                    },\n                    series: [\n                        {\n                            //name: 'Top 100',\n                            type: 'effectScatter',\n                            coordinateSystem: 'geo',\n                            // data: convertData(influence.sort(function (a, b) {\n                            //     return b.value - a.value;\n                            // }).slice(0,10)),         \n                            data: convertData,\n                            symbol: 'circle',\n\n                            symbolSize: function (val) {\n                             \n                                return 10 + (val[2]-data_min)/(data_max - data_min)*50;\n                            },\n                            effectType:\"ripple\", \n            \t\t\t\tshowEffectOn: 'render',\n            \t\t\t\trippleEffect: {\n                \t\t\t\t\tbrushType: 'stroke'\n            \t\t\t\t},\n            \t\t\t\thoverAnimation: true,\n\n                            label: {\n                                normal: {\n                                    formatter: '{b}',\n                                    position: 'top',\n                                    show: false,\n                                    // color:'rgb(224,31,84)'\n                                    color: \"#4E4E4E\",\n                                },\n                                emphasis:{\n                                    formatter:'{b}',\n                                    position:'top',\n                                    show:true,\n                                    color:\"#4E4E4E\",\n                                    backgroundColor: \"#fff\",\n                                }\n                            },\n                            itemStyle: {\n                                normal: {\n                                    // color: 'rgb(224, 31, 84)',\n                                    //color: \"#60acfc\",\n                                    //opacity:0.3,\n                                    shadowBlur: 2,\n                                    shadowColor: '#333',\n                                    borderWidth : 4\n                                }\n                            }//,\n                            //zlevel: 1\n                        },\n                         {\n            \t\t\t\t\ttype: 'lines',\n            \n          \t\t\t\t\t\tdata:linesdata,\n          \t\t\t\t\t\tsymbol: ['none', 'arrow'],\n            \t\t\t\t\tsymbolSize: 20,\n            \t\t\t\t\tcoordinateSystem: 'geo',\n            \t\t\t\t\n            \t\t\t\t\tlineStyle: {\n                \t\t\t\t\tnormal: {\n                   \t\t\t\t\t \tcolor: '#50c9c3',\n                    \t\t\t\t\twidth: 1,\n                    \t\t\t\t\topacity: 1,\n                    \t\t\t\t\tcurveness: -0.1\n                \t\t\t\t\t}\n            \t\t\t\t\t},\n            \t\t\t\t\teffect: {\n                \t\t\t\t\tshow: true,\n                \t\t\t\t\tsmooth: false,\n                \t\t\t\t\tperiod: 6,\n                \t\t\t\t\ttrailLength: 0,  //特效尾迹的长度\n                \t\t\t\t\tsymbol: \"arrow\",\n                \t\t\t\t\tcolor: '#50c9c3',\n                \t\t\t\t\tsymbolSize: 10\n            \t\t\t\t\t},\n\n            \t\t\t\t\t/*\n            \t\t\t\t\t effect : {\n                    \t\t\t\tshow: true,\n                    \t\t\t\tscaleSize: 2,\n                    \t\t\t\tperiod: 30,\n                    \t\t\t\tcolor: '#fff',\n                    \t\t\t\tshadowBlur: 10\n                \t\t\t\t},\n \t\t\t\t\t\t\t\t*/\n            \t\t\t\t\tsmooth:true,\n               \n                \t\t\t\titemStyle : {\n                    \t\t\t\tnormal: {\n                        \t\t\t\tborderWidth:1,\n                        \t\t\t\tlineStyle: {\n                            \t\t\t\ttype: 'solid',\n                            \t\t\t\t//shadowBlur: 2\n                        \t\t\t\t}\n                    \t\t\t\t}\n                \t\t\t\t}\n            \t\t\t\t\t\n        \t\t\t\t}\n                    ]\n                \n                };\n\n                myChart.setOption(option);\n\n            \n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n              myChart.on(\"click\", function (params) {\n          \n             \t\tconsole.log(params.data.name);\n              \t\t$search.to_display3(\"2\"+\",\"+params.data.name)\n        \t})\n               \n            }\n        }\n    }\n</script>\n<style scoped>\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .blank{\n\t\twidth:600px;\n\t\theight:550px;}\n\t\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n</style>\n"],"sourceRoot":"src/components/graphs"}]}