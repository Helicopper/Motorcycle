{"remainingRequest":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_eslint-loader@2.1.1@eslint-loader/index.js??ref--13-0!/var/www/html/ai-project/src/components/bus.js","dependencies":[{"path":"/var/www/html/ai-project/src/components/bus.js","mtime":1550054044095},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_eslint-loader@2.1.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\n/*\nbus作为数据存储中心，并负责组件间数据通信\n在 main.js 中已将 bus 写入vue的原型，可用 this.$bus 全局调用bus\n\n组件直接使用bus的数据\n使用 $bus 的 methods 获取数据\n\n事件监听\n发送 this.$bus.$emit(eventname, value)\n监听 this.$bus.$on(eventname, function(value){ 对应操作 })\n\n资料来源：https://www.jb51.net/article/136758.htm\n*/\nimport Vue from 'vue';\nexport default new Vue({\n  methods: {\n    get_query_text: function get_query_text() {\n      return this.query_data.query_text;\n    },\n    return_testdata: function return_testdata() {\n      return this.test_data;\n    },\n    update_query_text: function update_query_text(val) {\n      if (val != \"\") {\n        this.query_data.query_text = val;\n      }\n    },\n    // 接收数据结果\n    receive_result: function receive_result(val) {\n      this.query_data.query_result = val;\n    },\n    // 取出数据\n    get_result: function get_result() {\n      return this.query_data.query_result;\n    },\n    // 取出图的数据\n    get_result_graph: function get_result_graph() {\n      return this.query_data.query_result.graph;\n    },\n    clean_result: function clean_result() {\n      this.query_data.query_result = \"\";\n    }\n  },\n  // created() {\n  //   // 监听事件\n  //   this.$on(\"update_data\", (val) => {\n  //     this.data = val;\n  //   })\n  // },\n  data: function data() {\n    return {\n      data: \"origin data\",\n      default: {},\n      query_data: {\n        query_text: \"\",\n        type: \"\",\n        seq: \"\",\n        query_result: {\n          \"graph\": {\n            \"graph_tree\": {\n              \"name\": \"flare\",\n              \"children\": [{\n                \"name\": \"flex\",\n                \"children\": [{\n                  \"name\": \"FlareVis\"\n                }]\n              }, {\n                \"name\": \"scale\",\n                \"children\": [{\n                  \"name\": \"IScaleMap\",\n                  \"children\": [{\n                    \"name\": \"A\"\n                  }]\n                }, {\n                  \"name\": \"LinearScale\"\n                }, {\n                  \"name\": \"LogScale\"\n                }, {\n                  \"name\": \"OrdinalScale\"\n                }, {\n                  \"name\": \"QuantileScale\"\n                }, {\n                  \"name\": \"QuantitativeScale\"\n                }]\n              }, {\n                \"name\": \"display\",\n                \"children\": [{\n                  \"name\": \"DirtySprite\"\n                }]\n              }]\n            }\n          }\n        }\n      }\n    };\n  }\n});",{"version":3,"sources":["/var/www/html/ai-project/src/components/bus.js"],"names":["Vue","methods","get_query_text","query_data","query_text","return_testdata","test_data","update_query_text","val","receive_result","query_result","get_result","get_result_graph","graph","clean_result","data","default","type","seq"],"mappings":";;;;AAAA;;;;;;;;;;;;;AAcA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,eAAe,IAAIA,GAAJ,CAAQ;AACrBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,4BACU;AACf,aAAO,KAAKC,UAAL,CAAgBC,UAAvB;AACD,KAHM;AAIPC,IAAAA,eAJO,6BAIW;AAChB,aAAO,KAAKC,SAAZ;AACD,KANM;AAOPC,IAAAA,iBAPO,6BAOWC,GAPX,EAOgB;AACrB,UAAIA,GAAG,IAAI,EAAX,EAAe;AACb,aAAKL,UAAL,CAAgBC,UAAhB,GAA6BI,GAA7B;AACD;AACF,KAXM;AAYP;AACAC,IAAAA,cAbO,0BAaQD,GAbR,EAaa;AAClB,WAAKL,UAAL,CAAgBO,YAAhB,GAA+BF,GAA/B;AACD,KAfM;AAgBP;AACAG,IAAAA,UAjBO,wBAiBM;AACX,aAAO,KAAKR,UAAL,CAAgBO,YAAvB;AACD,KAnBM;AAoBP;AACAE,IAAAA,gBArBO,8BAqBY;AACjB,aAAO,KAAKT,UAAL,CAAgBO,YAAhB,CAA6BG,KAApC;AACD,KAvBM;AAwBPC,IAAAA,YAxBO,0BAwBQ;AACb,WAAKX,UAAL,CAAgBO,YAAhB,GAA+B,EAA/B;AACD;AA1BM,GADY;AA6BrB;AACA;AACA;AACA;AACA;AACA;AACAK,EAAAA,IAnCqB,kBAmCd;AACL,WAAO;AACLA,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAE,EAFJ;AAGLb,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE,EADF;AAEVa,QAAAA,IAAI,EAAE,EAFI;AAGVC,QAAAA,GAAG,EAAE,EAHK;AAIVR,QAAAA,YAAY,EAAE;AACZ,mBAAS;AACP,0BAAc;AACZ,sBAAQ,OADI;AAEZ,0BAAY,CAAC;AACT,wBAAQ,MADC;AAET,4BAAY,CAAC;AACX,0BAAQ;AADG,iBAAD;AAFH,eAAD,EAMV;AACE,wBAAQ,OADV;AAEE,4BAAY,CAAC;AACT,0BAAQ,WADC;AAET,8BAAY,CAAC;AACX,4BAAQ;AADG,mBAAD;AAFH,iBAAD,EAMV;AACE,0BAAQ;AADV,iBANU,EASV;AACE,0BAAQ;AADV,iBATU,EAYV;AACE,0BAAQ;AADV,iBAZU,EAeV;AACE,0BAAQ;AADV,iBAfU,EAkBV;AACE,0BAAQ;AADV,iBAlBU;AAFd,eANU,EA+BV;AACE,wBAAQ,SADV;AAEE,4BAAY,CAAC;AACX,0BAAQ;AADG,iBAAD;AAFd,eA/BU;AAFA;AADP;AADG;AAJJ;AAHP,KAAP;AAsDD;AA1FoB,CAAR,CAAf","sourcesContent":["/*\nbus作为数据存储中心，并负责组件间数据通信\n在 main.js 中已将 bus 写入vue的原型，可用 this.$bus 全局调用bus\n\n组件直接使用bus的数据\n使用 $bus 的 methods 获取数据\n\n事件监听\n发送 this.$bus.$emit(eventname, value)\n监听 this.$bus.$on(eventname, function(value){ 对应操作 })\n\n资料来源：https://www.jb51.net/article/136758.htm\n*/\n\nimport Vue from 'vue'\n\nexport default new Vue({\n  methods: {\n    get_query_text() {\n      return this.query_data.query_text;\n    },\n    return_testdata() {\n      return this.test_data;\n    },\n    update_query_text(val) {\n      if (val != \"\") {\n        this.query_data.query_text = val;\n      }\n    },\n    // 接收数据结果\n    receive_result(val) {\n      this.query_data.query_result = val;\n    },\n    // 取出数据\n    get_result() {\n      return this.query_data.query_result;\n    },\n    // 取出图的数据\n    get_result_graph() {\n      return this.query_data.query_result.graph;\n    },\n    clean_result() {\n      this.query_data.query_result = \"\";\n    }\n  },\n  // created() {\n  //   // 监听事件\n  //   this.$on(\"update_data\", (val) => {\n  //     this.data = val;\n  //   })\n  // },\n  data() {\n    return {\n      data: \"origin data\",\n      default: {},\n      query_data: {\n        query_text: \"\",\n        type: \"\",\n        seq: \"\",\n        query_result: {\n          \"graph\": {\n            \"graph_tree\": {\n              \"name\": \"flare\",\n              \"children\": [{\n                  \"name\": \"flex\",\n                  \"children\": [{\n                    \"name\": \"FlareVis\"\n                  }]\n                },\n                {\n                  \"name\": \"scale\",\n                  \"children\": [{\n                      \"name\": \"IScaleMap\",\n                      \"children\": [{\n                        \"name\": \"A\"\n                      }]\n                    },\n                    {\n                      \"name\": \"LinearScale\"\n                    },\n                    {\n                      \"name\": \"LogScale\"\n                    },\n                    {\n                      \"name\": \"OrdinalScale\"\n                    },\n                    {\n                      \"name\": \"QuantileScale\"\n                    },\n                    {\n                      \"name\": \"QuantitativeScale\"\n                    }\n                  ]\n                },\n                {\n                  \"name\": \"display\",\n                  \"children\": [{\n                    \"name\": \"DirtySprite\"\n                  }]\n                }\n              ]\n            }\n          }\n        }\n      }\n    }\n  }\n});"]}]}