{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_tree.vue","mtime":1585908403000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":1574947026000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"tree\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        //console.log(\"key :\" + this.keyWord + \"_\" + i);\n        var id = this.keyWord + \"_\" + i;\n        this.draw_tree(id, itemData[i]);\n      }\n    },\n    draw_tree: function draw_tree(id, data) {\n      var graph_data = data.data;\n      var graph_title = data.title;\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial();\n      var contain_height = chart.offsetHeight;\n      var contain_width = chart.offsetWidth;\n      var myChart = echarts.init(chart);\n      var option = {\n        title: {\n          //text: graph_title,\n          text: '相关推荐词',\n          // subtext: \"副标题\",\n          show: true\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {\n              show: true,\n              type: \"png\",\n              pixelRatio: 3\n            },\n            restore: {\n              show: true\n            }\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          triggerOn: 'mousemove'\n        },\n        legend: {\n          top: '2%',\n          left: '3%',\n          orient: 'vertical',\n          data: {\n            // 单棵树的名字\n            name: 'tree2',\n            icon: 'rectangle'\n          }\n        },\n        series: {\n          type: 'tree',\n          name: 'test-tree',\n          // top: '20%',\n          top: '10%',\n          left: '37%',\n          bottom: '10%',\n          right: '50%',\n          //layout: 'radial',//环形\n          // 树的初始层数，从0开始\n          initialTreeDepth: 2,\n          // 子树折叠和展开的交互\n          expandAndCollapse: true,\n          // 初始动画的时长\n          animationDuration: 300,\n          // 数据更新动画的时长。\n          animationDurationUpdate: 750,\n          data: [graph_data],\n          // 可以设置回调函数 (value: Array|number, params: Object) => number|Array\n          symbolSize: 15,\n          label: {\n            position: 'left',\n            verticalAlign: 'middle',\n            align: 'right',\n            fontSize: '20'\n          },\n          leaves: {\n            label: {\n              fontSize: 15,\n              position: 'right',\n              verticalAlign: 'middle',\n              align: 'left'\n            }\n          },\n          emphasis: {\n            itemStyle: {\n              color: \"#ff4040\" // borderColor: \"#555\",\n\n            },\n            label: {\n              fontWeight: \"bold\" // fontSize:20,\n\n            },\n            lineStyle: {\n              color: \"#fff\",\n              width: 2\n            }\n          }\n        }\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial();\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        //console.log(\"CLICK\");\n        //console.log(params.data.name);\n        $search.to_display2(\"1\" + \",\" + params.data.name);\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 树图  -->\n  <div class=\"hellotheworld\">\n\t<div class=\"wrap\">\n\t\t<aside class=\"left\">\n\t\t\t<p>figure3</p>\n\t\t\t<div class=\"name\">相关推荐词</div>\n\t\t\t<ul>\n\t\t\t\t<li>类型：树图</li>\n\t\t\t\t<li>点：检索词</li>\n\t\t\t\t<li>边：相关性</li>\n\t\t\t</ul>\n\t\t\t<div class=\"texts\">图片描述：为您展示所有检索信息中与[关键词]相关性最强的相关检索词，您可以通过此图了解有关[关键词]的检索方向、替补竞价词、互补竞价词等信息。</div>\n\t\t</aside>\n\t\t<section class=\"right\">\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</section>\n\t</div>\n\t<div class=\"blank\"></div>\n  </div>\n</template>\n<script>\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n    name: \"tree\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (var i in itemData) {\n          //console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_tree(id, itemData[i]);\n        }\n      },\n      draw_tree(id, data) {\n        let graph_data = data.data;\n        let graph_title = data.title;\n\n\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          chart.style.margin = \"0 auto\";\n          chart.style.height = (chartParent.clientWidth * 0.75 - 30) + \"px\";\n        }\n        initial();\n\n        let contain_height = chart.offsetHeight;\n        let contain_width = chart.offsetWidth;\n        let myChart = echarts.init(chart);\n        let option = {\n          title: {\n            //text: graph_title,\n            text:'相关推荐词',\n            // subtext: \"副标题\",\n            show: true,\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {\n                show: true,\n                type: \"png\",\n                pixelRatio: 3\n              },\n              restore: {\n                show: true\n              }\n            }\n          },\n          tooltip: {\n            trigger: 'item',\n            triggerOn: 'mousemove'\n          },\n          legend: {\n            top: '2%',\n            left: '3%',\n            orient: 'vertical',\n            data: {\n              // 单棵树的名字\n              name: 'tree2',\n              icon: 'rectangle'\n            },\n          },\n          \n          series: {\n            type: 'tree',\n            name: 'test-tree',\n            // top: '20%',\n\n            top: '10%',\n            left: '37%',\n            bottom: '10%',\n            right: '50%',\n\n            //layout: 'radial',//环形\n            // 树的初始层数，从0开始\n            initialTreeDepth: 2,\n            // 子树折叠和展开的交互\n            expandAndCollapse: true,\n            // 初始动画的时长\n            animationDuration: 300,\n            // 数据更新动画的时长。\n            animationDurationUpdate: 750,\n            data: [graph_data],\n            // 可以设置回调函数 (value: Array|number, params: Object) => number|Array\n            symbolSize: 15,\n            \n            label: {\n              position: 'left',\n              verticalAlign: 'middle',\n              align: 'right',\n              fontSize: '20'\n            },\n \t\t\t      leaves: {\n              \t\tlabel: {\n                \t\tfontSize: 15,\n                \t\tposition: 'right',\n                    verticalAlign: 'middle',\n                    align: 'left'\n              \t\t}\n            },\n            emphasis: {\n              itemStyle: {\n                color: \"#ff4040\",\n                // borderColor: \"#555\",\n              },\n              label: {\n                fontWeight: \"bold\",\n                // fontSize:20,\n              },\n              lineStyle: {\n                color: \"#fff\",\n                width: 2,\n              }\n            },\n          }\n        }\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n       \n          myChart.resize()\n        })\n\n          myChart.on(\"click\", function (params) {\n          \n              //console.log(\"CLICK\");\n              //console.log(params.data.name);\n              $search.to_display2(\"1\"+\",\"+params.data.name)\n         \n        })\n     \n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .blank{\n\t\twidth:600px;\n\t\theight:550px;}\n\t\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n</style>\n"],"sourceRoot":"src/components/graphs"}]}