{"remainingRequest":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_eslint-loader@2.1.1@eslint-loader/index.js??ref--13-0!/var/www/html/ai-project/src/util/bus.js","dependencies":[{"path":"/var/www/html/ai-project/src/util/bus.js","mtime":1551186567612},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_eslint-loader@2.1.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*\nbus作为数据存储中心，并负责组件间数据通信\n在 main.js 中已将 bus 写入vue的原型，可用 this.$bus 全局调用bus\n\n组件直接使用bus的数据\n使用 $bus 的 methods 获取数据\n\n事件监听\n发送 this.$bus.$emit(eventname, value)\n监听 this.$bus.$on(eventname, function(value){ 对应操作 })\n\n资料来源：https://www.jb51.net/article/136758.htm\n*/\nimport Vue from 'vue';\nexport default new Vue({\n  methods: {\n    get_query_text: function get_query_text() {\n      return this.query_data.query_text;\n    },\n    return_testdata: function return_testdata() {\n      return this.test_data;\n    },\n    update_query_text: function update_query_text(val) {\n      if (val != \"\") {\n        this.query_data.query_text = val;\n      }\n    },\n    // 接收数据结果\n    receive_result: function receive_result(val) {\n      if (val === \"   [delete] Deleting directory /var/www/html/ai/MINA_STEP1/classes/main\") {\n        console.log(\"answer: \" + val);\n        console.log(\"error: 114 server is not running!\"); // el组件，警告框\n\n        this.$notify.error({\n          title: 'ERROR',\n          message: \"114 server is not running!\",\n          offset: 100\n        });\n      } else if (val === \"114Wrongnull\") {\n        // el组件，警告框\n        this.$notify.error({\n          title: 'ERROR',\n          message: \"Back end error! \" + val,\n          offset: 100,\n          duration: 0\n        });\n      } else {\n        this.query_data.query_result = val;\n      } // 停止 loading\n\n\n      this.$bus.$emit(\"changeLoading\", false);\n    },\n    // 取出数据\n    get_result: function get_result() {\n      return this.query_data.query_result;\n    },\n    // 取出图的数据\n    get_result_graph: function get_result_graph() {\n      return this.query_data.query_result.visual;\n    },\n    clean_last_result: function clean_last_result() {\n      this.query_data.query_result = \"\";\n    }\n  },\n  // created() {\n  //   // 监听事件\n  //   this.$on(\"update_data\", (val) => {\n  //     this.data = val;\n  //   })\n  // },\n  data: function data() {\n    return {\n      data: \"origin data\",\n      query_data: {\n        query_text: \"\",\n        type: \"\",\n        seq: \"\",\n        query_result: {}\n      },\n      default: {\n        \"papers\": [{\n          \"paperNumId\": 0,\n          \"paperTitle\": \"暂无数据\",\n          \"paperAbstract\": \"\",\n          \"paperAuthors\": [],\n          \"paperUrl\": \"www.baidu.com\",\n          \"paperJournalFullName\": \"\",\n          \"paperConfFullName\": \"\",\n          \"paperCitationsNum\": 0,\n          \"paperInfluence\": 0\n        }],\n        \"patents\": [{}],\n        \"CN_News\": [{\n          \"title\": \"暂无数据\",\n          \"release_time\": \"\",\n          \"author\": \"\",\n          \"url\": \"#\",\n          \"id\": 0\n        }]\n      }\n    };\n  }\n});",{"version":3,"sources":["/var/www/html/ai-project/src/util/bus.js"],"names":["Vue","methods","get_query_text","query_data","query_text","return_testdata","test_data","update_query_text","val","receive_result","console","log","$notify","error","title","message","offset","duration","query_result","$bus","$emit","get_result","get_result_graph","visual","clean_last_result","data","type","seq","default"],"mappings":"AAAA;;;;;;;;;;;;;AAcA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,eAAe,IAAIA,GAAJ,CAAQ;AACrBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,4BACU;AACf,aAAO,KAAKC,UAAL,CAAgBC,UAAvB;AACD,KAHM;AAIPC,IAAAA,eAJO,6BAIW;AAChB,aAAO,KAAKC,SAAZ;AACD,KANM;AAOPC,IAAAA,iBAPO,6BAOWC,GAPX,EAOgB;AACrB,UAAIA,GAAG,IAAI,EAAX,EAAe;AACb,aAAKL,UAAL,CAAgBC,UAAhB,GAA6BI,GAA7B;AACD;AACF,KAXM;AAYP;AACAC,IAAAA,cAbO,0BAaQD,GAbR,EAaa;AAClB,UAAGA,GAAG,KAAK,yEAAX,EAAsF;AACpFE,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,GAAzB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAFoF,CAGpF;;AACA,aAAKC,OAAL,CAAaC,KAAb,CAAmB;AACjBC,UAAAA,KAAK,EAAE,OADU;AAEjBC,UAAAA,OAAO,EAAE,4BAFQ;AAGjBC,UAAAA,MAAM,EAAE;AAHS,SAAnB;AAKD,OATD,MAUK,IAAGR,GAAG,KAAK,cAAX,EAA2B;AAC9B;AACA,aAAKI,OAAL,CAAaC,KAAb,CAAmB;AACjBC,UAAAA,KAAK,EAAE,OADU;AAEjBC,UAAAA,OAAO,EAAE,qBAAqBP,GAFb;AAGjBQ,UAAAA,MAAM,EAAE,GAHS;AAIjBC,UAAAA,QAAQ,EAAE;AAJO,SAAnB;AAMD,OARI,MASA;AACH,aAAKd,UAAL,CAAgBe,YAAhB,GAA+BV,GAA/B;AACD,OAtBiB,CAuBlB;;;AACA,WAAKW,IAAL,CAAUC,KAAV,CAAgB,eAAhB,EAAiC,KAAjC;AACD,KAtCM;AAuCP;AACAC,IAAAA,UAxCO,wBAwCM;AACX,aAAO,KAAKlB,UAAL,CAAgBe,YAAvB;AACD,KA1CM;AA2CP;AACAI,IAAAA,gBA5CO,8BA4CY;AACjB,aAAO,KAAKnB,UAAL,CAAgBe,YAAhB,CAA6BK,MAApC;AACD,KA9CM;AA+CPC,IAAAA,iBA/CO,+BA+Ca;AAClB,WAAKrB,UAAL,CAAgBe,YAAhB,GAA+B,EAA/B;AACD;AAjDM,GADY;AAoDrB;AACA;AACA;AACA;AACA;AACA;AACAO,EAAAA,IA1DqB,kBA0Dd;AACL,WAAO;AACLA,MAAAA,IAAI,EAAE,aADD;AAELtB,MAAAA,UAAU,EAAE;AACVC,QAAAA,UAAU,EAAE,EADF;AAEVsB,QAAAA,IAAI,EAAE,EAFI;AAGVC,QAAAA,GAAG,EAAE,EAHK;AAIVT,QAAAA,YAAY,EAAE;AAJJ,OAFP;AAQLU,MAAAA,OAAO,EAAE;AACP,kBAAU,CAAC;AACT,wBAAc,CADL;AAET,wBAAc,MAFL;AAGT,2BAAiB,EAHR;AAIT,0BAAgB,EAJP;AAKT,sBAAY,eALH;AAMT,kCAAwB,EANf;AAOT,+BAAqB,EAPZ;AAQT,+BAAqB,CARZ;AAST,4BAAkB;AATT,SAAD,CADH;AAYP,mBAAW,CAAC,EAAD,CAZJ;AAeP,mBAAW,CAAC;AACV,mBAAS,MADC;AAEV,0BAAgB,EAFN;AAGV,oBAAU,EAHA;AAIV,iBAAO,GAJG;AAKV,gBAAM;AALI,SAAD;AAfJ;AARJ,KAAP;AAgCD;AA3FoB,CAAR,CAAf","sourcesContent":["/*\nbus作为数据存储中心，并负责组件间数据通信\n在 main.js 中已将 bus 写入vue的原型，可用 this.$bus 全局调用bus\n\n组件直接使用bus的数据\n使用 $bus 的 methods 获取数据\n\n事件监听\n发送 this.$bus.$emit(eventname, value)\n监听 this.$bus.$on(eventname, function(value){ 对应操作 })\n\n资料来源：https://www.jb51.net/article/136758.htm\n*/\n\nimport Vue from 'vue';\n\nexport default new Vue({\n  methods: {\n    get_query_text() {\n      return this.query_data.query_text;\n    },\n    return_testdata() {\n      return this.test_data;\n    },\n    update_query_text(val) {\n      if (val != \"\") {\n        this.query_data.query_text = val;\n      }\n    },\n    // 接收数据结果\n    receive_result(val) {\n      if(val === \"   [delete] Deleting directory /var/www/html/ai/MINA_STEP1/classes/main\") {\n        console.log(\"answer: \" + val);\n        console.log(\"error: 114 server is not running!\");\n        // el组件，警告框\n        this.$notify.error({\n          title: 'ERROR',\n          message: \"114 server is not running!\",\n          offset: 100\n        });\n      }\n      else if(val === \"114Wrongnull\") {\n        // el组件，警告框\n        this.$notify.error({\n          title: 'ERROR',\n          message: \"Back end error! \" + val,\n          offset: 100,\n          duration: 0\n        });\n      }\n      else {\n        this.query_data.query_result = val;\n      }\n      // 停止 loading\n      this.$bus.$emit(\"changeLoading\", false)\n    },\n    // 取出数据\n    get_result() {\n      return this.query_data.query_result;\n    },\n    // 取出图的数据\n    get_result_graph() {\n      return this.query_data.query_result.visual;\n    },\n    clean_last_result() {\n      this.query_data.query_result = \"\";\n    }\n  },\n  // created() {\n  //   // 监听事件\n  //   this.$on(\"update_data\", (val) => {\n  //     this.data = val;\n  //   })\n  // },\n  data() {\n    return {\n      data: \"origin data\",\n      query_data: {\n        query_text: \"\",\n        type: \"\",\n        seq: \"\",\n        query_result: {}\n      },\n      default: {\n        \"papers\": [{\n          \"paperNumId\": 0,\n          \"paperTitle\": \"暂无数据\",\n          \"paperAbstract\": \"\",\n          \"paperAuthors\": [],\n          \"paperUrl\": \"www.baidu.com\",\n          \"paperJournalFullName\": \"\",\n          \"paperConfFullName\": \"\",\n          \"paperCitationsNum\": 0,\n          \"paperInfluence\": 0\n        }],\n        \"patents\": [{\n\n        }],\n        \"CN_News\": [{\n          \"title\": \"暂无数据\",\n          \"release_time\": \"\",\n          \"author\": \"\",\n          \"url\": \"#\",\n          \"id\": 0\n        }]\n      },\n    }\n  }\n});"]}]}