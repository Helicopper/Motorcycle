{"remainingRequest":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/entity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/entity.vue","mtime":1550570485554},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar echarts = require('echarts');\n\nexport default {\n  name: \"demandMap\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        console.log(\"key :\" + this.keyWord + \"_\" + i);\n        var id = this.keyWord + \"_\" + i;\n        this.draw_demandMap(id, itemData[i][\"data\"]);\n      }\n    },\n    transform_data: function transform_data(data) {\n      var result = [];\n\n      for (var index in data) {\n        var arr = []; // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n\n        var crela = data[index].correlation; // x不超过相关性的值\n\n        var x = Math.random() * crela; // 随机正负\n\n        x = x * (Math.random() > 0.5 ? 1 : -1); // 计算y\n\n        var y = Math.sqrt(crela * crela - x * x); // 随机正负\n\n        y = y * (Math.random() > 0.5 ? 1 : -1);\n        arr.push(x);\n        arr.push(y);\n        arr.push(data[index].name);\n        arr.push(data[index].value);\n        result.push(arr);\n      }\n\n      return result;\n    },\n    draw_demandMap: function draw_demandMap(id, data) {\n      var graph_data = data; // 初始化\n\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\"; // chart.style.height = (chartParent.clientWidth - 30) + \"px\";\n\n        chart.style.margin = \"0 auto\";\n      };\n\n      initial(); // 组件高度\n\n      var contain_height = chart.offsetHeight; // 组件宽度\n\n      var contain_width = chart.offsetWidth; // 获取中心点\n\n      var center_data = this.transform_data(graph_data.center); // 获取上升点\n\n      var up_data = this.transform_data(graph_data.up); // 获取下降点\n\n      var down_data = this.transform_data(graph_data.down);\n      var myChart = echarts.init(chart);\n      var option = {\n        title: {\n          text: \"需求图谱\",\n          subtext: \"距离中心点越近，相关性越强\",\n          left: \"left\"\n        },\n        tooltip: {\n          show: true,\n          formatter: \"{c}\",\n          position: \"bottom\"\n        },\n        legend: {\n          show: true,\n          x: \"right\",\n          y: \"top\",\n          data: [{\n            name: \"上升\"\n          }, {\n            name: \"下降\"\n          }]\n        },\n        series: [{\n          // 中心点-------------------\n          name: \"中心\",\n          zlevel: -1,\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          // 何时显示特效\n          showEffectOn: \"render\",\n          rippleEffect: {\n            // 动画中波纹的最大缩放比例\n            scale: 10,\n            // 动画的周期，秒数\n            period: 15,\n            // 波纹绘制方式\n            brushType: \"fill\"\n          },\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          //是否开启鼠标 hover 的提示动画效果。\n          hoverAnimation: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: contain_width / 10,\n          symbolSize: function symbolSize(center_data) {\n            return center_data[3];\n          },\n          // 图标样式\n          itemStyle: {\n            color: \"rgba(157,211,250,0.5)\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 20,\n            fontWeight: \"bold\",\n            position: \"inside\"\n          },\n          data: center_data\n        }, {\n          // 下降的点-----------------------\n          name: \"下降\",\n          zlevel: 2,\n          // 涟漪散点图\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          showEffectOn: \"emphasis\",\n          // 散点图\n          // type: \"scatter\",\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: contain_width / 30,\n          symbolSize: function symbolSize(down_data) {\n            return down_data[3];\n          },\n          // 图标样式\n          itemStyle: {\n            // color: \"#F13C71\"\n            color: \"#45c14f\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 10,\n            position: \"bottom\"\n          },\n          emphasis: {\n            label: {\n              fontWeight: \"bold\"\n            }\n          },\n          data: down_data\n        }, {\n          // 上升的点-----------------------\n          name: \"上升\",\n          zlevel: 2,\n          // 涟漪散点图\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          showEffectOn: \"emphasis\",\n          // 散点图\n          // type: \"scatter\",\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: contain_width / 30,\n          symbolSize: function symbolSize(up_data) {\n            return up_data[3];\n          },\n          // 图标样式\n          itemStyle: {\n            // color: \"#6A48D7\"\n            color: \"#FFCC66\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 10,\n            position: \"bottom\"\n          },\n          emphasis: {\n            label: {\n              fontWeight: \"bold\"\n            }\n          },\n          data: up_data\n        }],\n        // x轴--------------------------------------------------\n        xAxis: [{\n          show: true,\n          zlevel: 20,\n          type: 'value',\n          min: -50,\n          max: 50,\n          axisLabel: {\n            margin: contain_height / 25,\n            fontWeight: \"bold\",\n            formatter: function formatter(value, index) {\n              var xlabel = [\"弱相关\", \" \", '强相关', \" \", '强相关', \" \", '弱相关'];\n              return xlabel[index];\n            }\n          },\n          // x轴分割线\n          splitLine: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          }\n        }],\n        // y轴--------------------------------------------------\n        yAxis: [{\n          show: false,\n          zlevel: 0,\n          type: 'value',\n          min: -50,\n          max: 50\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial(); // chart.style.width = this.initial_style(chart);\n\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        window.open(\"https://www.baidu.com/baidu?wd=\" + params.seriesName);\n      });\n    }\n  }\n};",{"version":3,"sources":["entity.vue"],"names":[],"mappings":"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","sourcesContent":["// 需求图谱，基于散点图\n<template>\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  let echarts = require('echarts');\n  export default {\n    name: \"demandMap\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (var i in itemData) {\n          console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_demandMap(id, itemData[i][\"data\"]);\n        }\n      },\n      transform_data(data) {\n        let result = [];\n        for (let index in data) {\n          let arr = [];\n          // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n          let crela = data[index].correlation;\n          // x不超过相关性的值\n          let x = Math.random() * crela;\n          // 随机正负\n          x = x * (Math.random() > 0.5 ? 1 : -1);\n          // 计算y\n          let y = Math.sqrt(crela * crela - x * x);\n          // 随机正负\n          y = y * (Math.random() > 0.5 ? 1 : -1);\n\n          arr.push(x);\n          arr.push(y);\n          arr.push(data[index].name);\n          arr.push(data[index].value);\n          result.push(arr);\n        }\n        return result;\n      },\n      draw_demandMap(id, data) {\n        let graph_data = data;\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          // chart.style.height = (chartParent.clientWidth - 30) + \"px\";\n          chart.style.margin = \"0 auto\";\n        }\n        initial();\n\n        // 组件高度\n        let contain_height = chart.offsetHeight;\n        // 组件宽度\n        let contain_width = chart.offsetWidth;\n\n        // 获取中心点\n        let center_data = this.transform_data(graph_data.center);\n        // 获取上升点\n        let up_data = this.transform_data(graph_data.up);\n        // 获取下降点\n        let down_data = this.transform_data(graph_data.down);\n\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: \"需求图谱\",\n            subtext: \"距离中心点越近，相关性越强\",\n            left: \"left\"\n          },\n          tooltip: {\n            show: true,\n            formatter: \"{c}\",\n            position: \"bottom\"\n          },\n          legend: {\n            show: true,\n            x: \"right\",\n            y: \"top\",\n            data: [\n              {name: \"上升\"},\n              {name: \"下降\"}\n            ]\n          },\n          series: [{\n              // 中心点-------------------\n              name: \"中心\",\n              zlevel: -1,\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              // 何时显示特效\n              showEffectOn: \"render\",\n              rippleEffect: {\n                // 动画中波纹的最大缩放比例\n                scale: 10,\n                // 动画的周期，秒数\n                period: 15,\n                // 波纹绘制方式\n                brushType: \"fill\"\n              },\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              //是否开启鼠标 hover 的提示动画效果。\n              hoverAnimation: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2,\n              },\n              symbol: 'circle',\n              // symbolSize: contain_width / 10,\n              symbolSize: function(center_data) {\n                return center_data[3]\n              },\n              // 图标样式\n              itemStyle: {\n                color: \"rgba(157,211,250,0.5)\",\n\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 20,\n                fontWeight: \"bold\",\n                position: \"inside\",\n              },\n              data: center_data\n            },\n            {\n              // 下降的点-----------------------\n              name: \"下降\",\n              zlevel: 2,\n              // 涟漪散点图\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              showEffectOn: \"emphasis\",\n              // 散点图\n              // type: \"scatter\",\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2\n              },\n              symbol: 'circle',\n              // symbolSize: contain_width / 30,\n              symbolSize: function(down_data) {\n                return down_data[3]\n              },\n              // 图标样式\n              itemStyle: {\n                // color: \"#F13C71\"\n                color: \"#45c14f\"\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 10,\n                position: \"bottom\",\n              },\n              emphasis: {\n                label: {\n                  fontWeight: \"bold\"\n                }\n              },\n              data: down_data\n            },\n            {\n              // 上升的点-----------------------\n              name: \"上升\",\n              zlevel: 2,\n              // 涟漪散点图\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              showEffectOn: \"emphasis\",\n              // 散点图\n              // type: \"scatter\",\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2,\n              },\n              symbol: 'circle',\n              // symbolSize: contain_width / 30,\n              symbolSize: function(up_data) {\n                return up_data[3]\n              },\n              // 图标样式\n              itemStyle: {\n                // color: \"#6A48D7\"\n                color: \"#FFCC66\"\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 10,\n                position: \"bottom\",\n              },\n              emphasis: {\n                label: {\n                  fontWeight: \"bold\"\n                }\n              },\n              data: up_data\n            }\n          ],\n          // x轴--------------------------------------------------\n          xAxis: [{\n            show: true,\n            zlevel: 20,\n            type: 'value',\n            min: -50,\n            max: 50,\n            axisLabel: {\n              margin: contain_height / 25,\n              fontWeight: \"bold\",\n              formatter: function (value, index) {\n                var xlabel = [\"弱相关\", \" \", '强相关', \" \", '强相关', \" \", '弱相关'];\n                return xlabel[index]\n              },\n            },\n            // x轴分割线\n            splitLine: {\n              show: false,\n            },\n            splitArea: {\n              show: false,\n            },\n          }],\n          // y轴--------------------------------------------------\n          yAxis: [{\n            show: false,\n            zlevel: 0,\n            type: 'value',\n            min: -50,\n            max: 50,\n          }],\n        }\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          window.open(\"https://www.baidu.com/baidu?wd=\" + params.seriesName);\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    max-height: 400px;\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"],"sourceRoot":"src/components/graphs"}]}