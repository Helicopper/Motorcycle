{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_scatter_searchFrequency.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_scatter_searchFrequency.vue","mtime":1583572250000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"scatter_searchFrequency\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {//tabItem:\"AllTab\"\n    };\n  },\n  mounted: function mounted() {\n    // this.draw_linefold();\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        console.log(\"key :\" + this.keyWord + \"_\" + i);\n        var id = this.keyWord + \"_\" + i;\n        this.draw_scatter_searchFrequency(id, itemData[i]);\n      }\n    },\n    draw_scatter_searchFrequency: function draw_scatter_searchFrequency(id, data) {\n      var title = data['title'];\n      var testdata = data['data'];\n      console.log(\"testdata\");\n      console.log(testdata);\n      var chart = document.getElementById(id);\n      var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a', '10a', '11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p'];\n      var days = ['Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday', 'Sunday'];\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial();\n      var myChart = echarts.init(chart);\n      var datakey = [];\n      var option = {\n        tooltip: {\n          position: 'top'\n        },\n        title: [],\n        singleAxis: [],\n        series: []\n      };\n      echarts.util.each(days, function (day, idx) {\n        option.title.push({\n          textBaseline: 'middle',\n          top: (idx + 0.5) * 100 / 7 + '%',\n          text: day\n        });\n        option.singleAxis.push({\n          left: 150,\n          type: 'category',\n          boundaryGap: false,\n          data: hours,\n          top: idx * 100 / 7 + 5 + '%',\n          height: 100 / 7 - 10 + '%',\n          axisLabel: {\n            interval: 2\n          }\n        });\n        option.series.push({\n          singleAxisIndex: idx,\n          coordinateSystem: 'singleAxis',\n          type: 'scatter',\n          data: [],\n          symbolSize: function symbolSize(dataItem) {\n            return dataItem[1] * 4;\n          }\n        });\n      });\n      echarts.util.each(data, function (dataItem) {\n        option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\n      });\n      myChart.setOption(option); // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n      // window.onresize = function(){\n      //     console.log(\"window resize!\")\n      //     initial();\n      //     myChart.resize();\n      //     console.log(\"myChart resize!\")\n      // }\n      // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n\n      window.addEventListener('resize', function () {\n        initial();\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        // console.log(params);\n        // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n        // $router.push({\n        //     path:\"/displayInfo\",\n        //     query:{query:params['seriesName'].toLowerCase()}\n        // })\n        var query = params['seriesName'].toLowerCase();\n        $search.to_display(query);\n      });\n      console.log(\"哈哈哈\");\n    }\n  }\n};",{"version":3,"sources":["graph_scatter_searchFrequency.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <!-- <el-tabs v-model=\"tabItem\" type=\"border-card\">\n  <el-tab-pane label=\"Paper\">\n      <div  v-if=\"'Paper' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"News\">\n      <div v-if=\"'News' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"Patent\">\n      <p v-if=\"'Patent' === tabItem\">ttttttttttttttttttttttt</p>\n  </el-tab-pane>\n</el-tabs> -->\n\t<div class=\"pricing-block\">\n\t\t<div class=\"pricing-block-content\">\n\t\t\t<h3>竞争网络图片</h3>\n\t\t\t<ul>\n\t\t\t\t<li>情报1</li>\n\t\t\t\t<li>情报2</li>\n\t\t\t</ul>\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</div>\n\t</div>\n<!--<el-tabs type=\"border-card\">\n  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n      <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n  </el-tab-pane>\n</el-tabs>\n-->\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n\n    export default {\n        name: \"scatter_searchFrequency\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord:{\n                type:String,\n                default(){\n                    return \"keyString\"\n                }\n            }\n        },\n        data() {\n            return {\n                 //tabItem:\"AllTab\"\n            }\n        },\n        mounted() {\n            // this.draw_linefold();\n            this.start_draw();\n        },\n\n        methods: {\n            start_draw() {\n               \n                let itemData = this.items;\n                for (let i in itemData){\n                    console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    this.draw_scatter_searchFrequency(id,itemData[i]);\n                }\n            },\n            draw_scatter_searchFrequency(id, data) {\n\n                let title = data['title'];\n                let testdata = data['data'];\n                console.log(\"testdata\");\n                console.log(testdata);\n                let chart = document.getElementById(id);\n                 \n                var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a','7a', '8a', '9a','10a','11a','12p', '1p', '2p', '3p', '4p', '5p','6p', '7p', '8p', '9p', '10p', '11p'];\n                var days = ['Saturday', 'Friday', 'Thursday','Wednesday', 'Tuesday', 'Monday', 'Sunday'];\n               \n                var initial = function () {\n                  \n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                let datakey = [];\n               \n                \n                const option = {\n                         tooltip: {\n                        position: 'top'\n                        },\n                         title: [],\n                        singleAxis: [],\n                        series: []\n                };\n\n\n                echarts.util.each(days, function (day, idx) {\n                    option.title.push({\n                        textBaseline: 'middle',\n                        top: (idx + 0.5) * 100 / 7 + '%',\n                        text: day\n                    });\n                    option.singleAxis.push({\n                        left: 150,\n                        type: 'category',\n                        boundaryGap: false,\n                        data: hours,\n                        top: (idx * 100 / 7 + 5) + '%',\n                        height: (100 / 7 - 10) + '%',\n                        axisLabel: {\n                            interval: 2\n                        }\n                    });\n                    option.series.push({\n                            singleAxisIndex: idx,\n                            coordinateSystem: 'singleAxis',\n                            type: 'scatter',\n                         data: [],\n                            symbolSize: function (dataItem) {\n                                return dataItem[1] * 4;\n                            }\n                    });\n                });\n\n                echarts.util.each(data, function (dataItem) {\n                    option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\n                });\n               \n                myChart.setOption(option);\n\n               \n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () \n                {\n                    initial();\n               \n                    myChart.resize()\n                })\n\n                myChart.on(\"click\",function(params){\n                    // console.log(params);\n                    // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                    // $router.push({\n                    //     path:\"/displayInfo\",\n                    //     query:{query:params['seriesName'].toLowerCase()}\n                    // })\n                    let query = params['seriesName'].toLowerCase();\n                    $search.to_display(query);\n                })\n                console.log(\"哈哈哈\");\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n    background-color: '#F0F5F8';\n    \n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n  .pricing-block-content el-tabs{\n  \t  width:100%;height:100%;\n  }\n  @import 'css/style.css';\n</style>\n"],"sourceRoot":"src/components/graphs"}]}