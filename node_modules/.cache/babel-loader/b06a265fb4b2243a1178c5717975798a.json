{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_wordcloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_wordcloud.vue","mtime":1574946998000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 直接导入地理图所需的json文件，注意一定记得register这个文件\nimport worldJson from 'echarts/map/json/world.json';\nimport $search from \"./../../util/search.js\";\nimport $drawGraphs from \"./../../util/drawGraphs.js\";\n\nvar echarts = require('echarts');\n\nrequire('echarts-wordcloud');\n\nexport default {\n  name: \"wordcloud\",\n  props: {\n    items: {\n      type: Array,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyString: {\n      type: String,\n      default: function _default() {\n        return \"test\";\n      }\n    }\n  },\n  data: function data() {\n    return {// tabItem:\"Paper\"\n    };\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  // watch:{\n  //     items:function() {\n  //         // this.draw_linefold();\n  //         console.log(\"watch items:\"+ items);\n  //     },\n  //     deep:true\n  // },\n  // updated:function() {\n  //     this.$nextTick(function(){\n  //         console.log(\"updated!\");\n  //         this.start_draw();\n  //     })\n  // },\n  methods: {\n    start_draw: function start_draw() {\n      var id = 'wordcloud' + '_' + this.keyString;\n      this.draw_wordcloud(id, this.items);\n    },\n    draw_wordcloud: function draw_wordcloud(id, data) {\n      var chart = document.getElementById(id);\n      var myChart = echarts.init(chart); // console.log(JSON.stringify(data))\n\n      var option = {\n        // title: {\n        //     text: title,\n        //     top: 'top',\n        //     // left: 'center'\n        // },\n        tooltip: {\n          trigger: 'item' // formatter:\n\n        },\n        toolbox: {\n          show: false,\n          orient: 'vertical',\n          x: 'right',\n          y: 'center'\n        },\n        series: [{\n          name: '词云',\n          type: 'wordCloud',\n          size: ['90%', '90%'],\n          textRotation: [-90, 90],\n          shape: 'circle',\n          autoSize: {\n            enable: true,\n            minSize: 14\n          },\n          textStyle: {\n            normal: {\n              color: function color(params, index) {\n                return $drawGraphs.set_color();\n              } // color:function () {\n              //     return 'rgb(' + [\n              //         Math.round(Math.random() * 160),\n              //         Math.round(Math.random() * 160),\n              //         Math.round(Math.random() * 160)\n              //         ].join(',') + ')';\n              // }\n\n            },\n            emphasis: {\n              shadowBlur: 10,\n              shadowColor: '#999'\n            }\n          },\n          data: data\n        }]\n      };\n      myChart.setOption(option); // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n\n      window.addEventListener('resize', function () {\n        // initial();\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        // $router.push({\n        //     path:\"/displayInfo\",\n        //     query:{query:params['data']['name'].toLowerCase()}\n        // })\n        var query = params['data']['name'].toLowerCase();\n        $search.to_display(query);\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_wordcloud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <!-- <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <p>{{index}},{{items[index][\"title\"]}}</p>\n        <div class=\"graph\" :id=\"'wordcloud'+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs> -->\n<div class=\"wordcloud\" :id=\"'wordcloud'+'_'+keyString\"></div>\n\n</template>\n<script>\n    // 直接导入地理图所需的json文件，注意一定记得register这个文件\n    import worldJson from 'echarts/map/json/world.json'\n    import $search from \"./../../util/search.js\"\n    import $drawGraphs from \"./../../util/drawGraphs.js\"\n\n    let echarts = require('echarts');\n    require('echarts-wordcloud');\n\n    export default {\n        name: \"wordcloud\",\n        props: {\n            items: {\n                type: Array,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyString:{\n                type:String,\n                default(){\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                let id = 'wordcloud'+'_'+ this.keyString;\n                this.draw_wordcloud(id,this.items);\n            },\n            draw_wordcloud(id,data) {\n                let chart = document.getElementById(id);\n                let myChart = echarts.init(chart);\n\n                // console.log(JSON.stringify(data))\n                const option = {\n                    // title: {\n                    //     text: title,\n                    //     top: 'top',\n                    //     // left: 'center'\n                    // },\n                    tooltip: {\n                        trigger: 'item',\n                        // formatter:\n                    },\n                    toolbox: {\n                        show: false,\n                        orient: 'vertical',\n                        x: 'right',\n                        y: 'center',\n                    },\n                        series: [{\n                        name: '词云',\n                        type: 'wordCloud',\n                        size: ['90%', '90%'],\n                        textRotation : [-90, 90],\n                        shape: 'circle',\n                        autoSize: {\n                            enable: true,\n                            minSize: 14\n                        },\n                        textStyle:{\n                            normal:{\n                                color: (params, index) => {\n                                    return $drawGraphs.set_color()\n                                }\n                                // color:function () {\n                                //     return 'rgb(' + [\n                                //         Math.round(Math.random() * 160),\n                                //         Math.round(Math.random() * 160),\n                                //         Math.round(Math.random() * 160)\n                                //         ].join(',') + ')';\n                                // }\n                            },\n                            emphasis:{\n                                shadowBlur:10,\n                                shadowColor:'#999'\n                            }\n                        },\n                        data: data\n                    }]\n                \n                };\n\n                myChart.setOption(option);\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    // initial();\n                    myChart.resize()\n                })\n\n                myChart.on(\"click\",function(params){\n                    // $router.push({\n                    //     path:\"/displayInfo\",\n                    //     query:{query:params['data']['name'].toLowerCase()}\n                    // })\n                    let query = params['data']['name'].toLowerCase()\n                    $search.to_display(query)\n                })\n            }\n        }\n    }\n</script>\n<style>\n.wordcloud {\n    min-width:100px;\n    height:300px;\n}\n</style>"],"sourceRoot":"src/components/graphs"}]}