{"remainingRequest":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_entity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_entity.vue","mtime":1552392591432},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $search from \"./../../util/search.js\";\n\nvar echarts = require('echarts');\n\nexport default {\n  name: \"demandMap\",\n  props: {\n    items: {\n      type: Object,\n      default: function _default() {\n        return {\n          \"test\": \"test\"\n        };\n      }\n    },\n    keyWord: {\n      type: String,\n      default: function _default() {\n        return \"keyString\";\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.start_draw();\n  },\n  methods: {\n    start_draw: function start_draw() {\n      var itemData = this.items;\n\n      for (var i in itemData) {\n        console.log(\"key :\" + this.keyWord + \"_\" + i);\n        var id = this.keyWord + \"_\" + i;\n        this.draw_demandMap(id, itemData[i]);\n      }\n    },\n    transform_data: function transform_data(data) {\n      var result = [];\n\n      for (var index in data) {\n        var arr = []; // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n        // 经过 abs() 和 log() 处理，平滑数据\n        // let crela = Math.log(Math.abs(data[index].correlation)+1);\n\n        var crela = data[index].correlation;\n        crela = Math.abs(crela) + 1;\n        crela = Math.log(crela); // 横坐标 x 不超过相关性的值\n\n        var x = Math.random() * crela; // 随机正负\n\n        x = x * (Math.random() > 0.5 ? 1 : -1); // 计算纵坐标 y\n\n        var y = Math.sqrt(crela * crela - x * x); // 随机正负\n\n        y = y * (Math.random() > 0.5 ? 1 : -1);\n        arr.push(x);\n        arr.push(y);\n        arr.push(data[index].name);\n        arr.push(data[index].value);\n        result.push(arr);\n      }\n\n      return result;\n    },\n    get_max_min: function get_max_min(data, label) {\n      // label=1时，求最大值; label=-1时，求最小值；\n      var result = data[\"up\"][0].correlation;\n\n      for (var i in data) {\n        if (i === \"center\") continue;\n\n        for (var j = 0; j < data[i].length; j++) {\n          var flag = label * (result - data[i][j].correlation);\n\n          if (flag < 0) {\n            result = data[i][j].correlation;\n          }\n        }\n      }\n\n      result = Math.log(Math.abs(result + 1));\n      return result;\n    },\n    tooltip_format: function tooltip_format(params) {\n      var name = params.data[2];\n      var value = params.data[3];\n      var x = params.data[0];\n      var y = params.data[1];\n      var crela = Math.round(x * x + y * y); // 拼接字符串\n\n      var str = \"\" + name + \"<br/> value: \" + value + \"<br/> correlation: \" + crela;\n      return str;\n    },\n    draw_demandMap: function draw_demandMap(id, data) {\n      var graph_data = data.data;\n      var graph_title = data.title; // 计算横纵轴的最大值\n\n      var axis_max = this.get_max_min(graph_data, 1); // 初始化\n\n      var chart = document.getElementById(id);\n\n      var initial = function initial() {\n        var chartParent = chart.parentNode.parentNode;\n        chart.style.width = chartParent.clientWidth - 30 + \"px\";\n        chart.style.margin = \"0 auto\";\n        chart.style.height = chartParent.clientWidth * 0.75 - 30 + \"px\";\n      };\n\n      initial(); // 获取中心点\n\n      var center_data = this.transform_data(graph_data.center); // 获取上升点\n\n      var up_data = this.transform_data(graph_data.up); // 获取下降点\n\n      var down_data = this.transform_data(graph_data.down);\n      var myChart = echarts.init(chart); // 组件高度\n      // let contain_height = chart.offsetHeight;\n\n      var chart_height = myChart.getWidth(); // 组件宽度\n      // let contain_width = chart.offsetWidth;\n\n      var chart_width = myChart.getHeight();\n      var option = {\n        title: {\n          text: graph_title,\n          subtext: \"距离中心点越近，相关性越强\",\n          left: \"left\"\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            saveAsImage: {\n              show: true,\n              type: \"png\",\n              pixelRatio: 3\n            },\n            restore: {\n              show: true\n            }\n          }\n        },\n        // 数据区域缩放\n        dataZoom: [{\n          type: 'slider',\n          // 控制x轴\n          xAxisIndex: 0,\n          bottom: \"1%\",\n          start: 0,\n          end: 100,\n          showDetail: false\n        }, {\n          type: 'inside',\n          // 控制x轴\n          xAxisIndex: 0,\n          start: 0,\n          end: 100,\n          showDetail: false\n        }, {\n          type: 'slider',\n          // 控制y轴\n          yAxisIndex: 0,\n          right: \"1%\",\n          start: 0,\n          end: 100,\n          showDetail: false\n        }, {\n          type: 'inside',\n          // 控制y轴\n          yAxisIndex: 0,\n          start: 0,\n          end: 100,\n          showDetail: false\n        }],\n        tooltip: {\n          show: true,\n          // formatter: this.tooltip_format(params),\n          formatter: function formatter(params) {\n            var name = params.data[2];\n            var value = params.data[3]; // 计算相关性\n\n            var x = params.data[0];\n            var y = params.data[1];\n            var crela = Math.round(x * x + y * y); // 拼接字符串\n\n            var str = \"\" + name + \"<br/> value: \" + value + \"<br/> distance: \" + crela;\n            return str;\n          },\n          position: \"top\"\n        },\n        legend: {\n          show: true,\n          x: \"center\",\n          y: \"top\",\n          data: [{\n            name: \"上升\"\n          }, {\n            name: \"下降\"\n          }]\n        },\n        series: [{\n          // 中心点-------------------\n          name: \"中心\",\n          zlevel: -1,\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          // 何时显示特效\n          showEffectOn: \"render\",\n          rippleEffect: {\n            // 动画中波纹的最大缩放比例\n            scale: 10,\n            // 动画的周期，秒数\n            period: 15,\n            // 波纹绘制方式\n            brushType: \"fill\"\n          },\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          //是否开启鼠标 hover 的提示动画效果。\n          hoverAnimation: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: axis_max,\n          symbolSize: function symbolSize(center_data) {\n            // return center_data[3]\n            return chart_width / 10;\n          },\n          // 图标样式\n          itemStyle: {\n            color: \"rgba(157,211,250,0.5)\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 20,\n            fontWeight: \"bold\",\n            position: \"inside\"\n          },\n          data: center_data\n        }, {\n          // 下降的点-----------------------\n          name: \"下降\",\n          zlevel: 2,\n          // 涟漪散点图\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          showEffectOn: \"emphasis\",\n          // 散点图\n          // type: \"scatter\",\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: contain_width / 30,\n          symbolSize: function symbolSize(params) {\n            // return down_data[3]\n            // return (chart.parentNode.parentNode.clientWidth) / 30;\n            return chart_width / 20 + 2 * Math.log(params[3]);\n          },\n          // 图标样式\n          itemStyle: {\n            // color: \"#45c14f\",\n            // color: \"rgba(75,192,192,0.7)\",\n            color: \"rgba(141, 218, 145,1)\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 10,\n            position: \"bottom\"\n          },\n          emphasis: {\n            label: {\n              fontWeight: \"bold\",\n              fontSize: 16,\n              backgroundColor: \"#fff\"\n            }\n          },\n          data: down_data\n        }, {\n          // 上升的点-----------------------\n          name: \"上升\",\n          zlevel: 2,\n          // 涟漪散点图\n          type: \"effectScatter\",\n          effectType: \"ripple\",\n          showEffectOn: \"emphasis\",\n          // 散点图\n          // type: \"scatter\",\n          // 图例 hover 时的联动高亮\n          legendHoverLink: true,\n          // 使用的直角坐标系\n          // coordinateSystem: \"cartesian2d\",\n          encode: {\n            x: 0,\n            y: 1,\n            label: 2\n          },\n          symbol: 'circle',\n          // symbolSize: contain_width / 30,\n          symbolSize: function symbolSize(params) {\n            return chart_width / 20 + 2 * Math.log(params[3]);\n          },\n          // 图标样式\n          itemStyle: {\n            // color: \"#FFCC66\",\n            color: \"rgba(255,206,86,0.7)\"\n          },\n          label: {\n            show: true,\n            color: \"#555\",\n            fontSize: 10,\n            position: \"bottom\"\n          },\n          emphasis: {\n            label: {\n              fontWeight: \"bold\",\n              fontSize: 16,\n              backgroundColor: \"#fff\"\n            }\n          },\n          data: up_data\n        }],\n        // x轴--------------------------------------------------\n        xAxis: [{\n          show: true,\n          zlevel: 20,\n          type: 'value',\n          // 坐标轴最大最小值\n          min: -axis_max,\n          max: axis_max,\n          axisLine: {\n            lineStyle: {\n              color: \"#aaa\",\n              opacity: 0.5\n            }\n          },\n          axisLabel: {\n            show: false,\n            margin: chart_height / 25,\n            fontWeight: \"bold\",\n            formatter: function formatter(value, index) {\n              var xlabel = [\"弱相关\", \" \", '强相关', \" \", '强相关', \" \", '弱相关'];\n              return xlabel[index];\n            }\n          },\n          // x轴分割线\n          splitLine: {\n            show: false\n          },\n          splitArea: {\n            show: false\n          }\n        }],\n        // y轴--------------------------------------------------\n        yAxis: [{\n          show: false,\n          zlevel: 0,\n          type: 'value',\n          top: \"10%\",\n          min: -axis_max,\n          max: axis_max\n        }]\n      };\n      myChart.setOption(option);\n      window.addEventListener('resize', function () {\n        initial(); // chart.style.width = this.initial_style(chart);\n\n        myChart.resize();\n      });\n      myChart.on(\"click\", function (params) {\n        // $router.push({\n        //   path: \"/displayInfo\",\n        //   query: {\n        //     query: params.data[2]\n        //   }\n        // });\n        $search.to_display(params.data[2]);\n      });\n    }\n  }\n};",{"version":3,"sources":["graph_entity.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- 需求图谱，基于散点图 -->\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n    name: \"demandMap\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (var i in itemData) {\n          console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_demandMap(id, itemData[i]);\n        }\n      },\n      transform_data(data) {\n        let result = [];\n        for (let index in data) {\n          let arr = [];\n          // 计算坐标值，令点到中心的值=correlation，即correlation^2 = x^2 + y^2\n          // 经过 abs() 和 log() 处理，平滑数据\n          // let crela = Math.log(Math.abs(data[index].correlation)+1);\n          let crela = data[index].correlation;\n          crela = Math.abs(crela) + 1;\n          crela = Math.log(crela);\n          // 横坐标 x 不超过相关性的值\n          let x = Math.random() * crela;\n          // 随机正负\n          x = x * (Math.random() > 0.5 ? 1 : -1);\n          // 计算纵坐标 y\n          let y = Math.sqrt(crela * crela - x * x);\n          // 随机正负\n          y = y * (Math.random() > 0.5 ? 1 : -1);\n\n          arr.push(x);\n          arr.push(y);\n          arr.push(data[index].name);\n          arr.push(data[index].value);\n          result.push(arr);\n        }\n        return result;\n      },\n      get_max_min(data, label) {\n        // label=1时，求最大值; label=-1时，求最小值；\n        let result = data[\"up\"][0].correlation;\n        for (let i in data) {\n          if (i === \"center\") continue;\n          for (let j = 0; j < data[i].length; j++) {\n            let flag = label * (result - data[i][j].correlation);\n            if (flag < 0) {\n              result = data[i][j].correlation;\n            }\n          }\n        }\n        result = Math.log(Math.abs(result + 1))\n        return result;\n      },\n      tooltip_format(params) {\n        let name = params.data[2];\n        let value = params.data[3];\n        let x = params.data[0];\n        let y = params.data[1];\n        let crela = Math.round(x * x + y * y);\n        // 拼接字符串\n        let str = \"\" + name + \"<br/> value: \" + value + \"<br/> correlation: \" + crela;\n        return str;\n      },\n      draw_demandMap(id, data) {\n        let graph_data = data.data;\n        let graph_title = data.title;\n        // 计算横纵轴的最大值\n        let axis_max = this.get_max_min(graph_data, 1);\n\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          chart.style.margin = \"0 auto\";\n          chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n        }\n        initial();\n\n\n        // 获取中心点\n        let center_data = this.transform_data(graph_data.center);\n        // 获取上升点\n        let up_data = this.transform_data(graph_data.up);\n        // 获取下降点\n        let down_data = this.transform_data(graph_data.down);\n\n        let myChart = echarts.init(chart);\n\n        // 组件高度\n        // let contain_height = chart.offsetHeight;\n        let chart_height = myChart.getWidth();\n        // 组件宽度\n        // let contain_width = chart.offsetWidth;\n        let chart_width = myChart.getHeight();\n\n        let option = {\n          title: {\n            text: graph_title,\n            subtext: \"距离中心点越近，相关性越强\",\n            left: \"left\"\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {\n                show: true,\n                type: \"png\",\n                pixelRatio: 3\n              },\n              restore: {\n                show: true\n              }\n            }\n          },\n          // 数据区域缩放\n          dataZoom: [\n            {\n              type: 'slider',\n                // 控制x轴\n                xAxisIndex: 0,\n                bottom: \"1%\",\n                start: 0,\n                end: 100,\n                showDetail: false,\n            },\n            {\n                type: 'inside',\n                // 控制x轴\n                xAxisIndex: 0,\n                start: 0,\n                end: 100,\n                showDetail: false,\n            },\n            {\n                type: 'slider',\n                // 控制y轴\n                yAxisIndex: 0,\n                right: \"1%\",\n                start: 0,\n                end: 100,\n                showDetail: false,\n            },\n            {\n                type: 'inside',\n                // 控制y轴\n                yAxisIndex: 0,\n                start: 0,\n                end: 100,\n                showDetail: false,\n            }\n          ],\n          tooltip: {\n            show: true,\n            // formatter: this.tooltip_format(params),\n            formatter: function (params) {\n              let name = params.data[2];\n              let value = params.data[3];\n              // 计算相关性\n              let x = params.data[0];\n              let y = params.data[1];\n              let crela = Math.round(x * x + y * y);\n              // 拼接字符串\n              let str = \"\" + name + \"<br/> value: \" + value + \"<br/> distance: \" + crela;\n              return str;\n            },\n            position: \"top\"\n          },\n          legend: {\n            show: true,\n            x: \"center\",\n            y: \"top\",\n            data: [{\n                name: \"上升\"\n              },\n              {\n                name: \"下降\"\n              }\n            ]\n          },\n          series: [{\n              // 中心点-------------------\n              name: \"中心\",\n              zlevel: -1,\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              // 何时显示特效\n              showEffectOn: \"render\",\n              rippleEffect: {\n                // 动画中波纹的最大缩放比例\n                scale: 10,\n                // 动画的周期，秒数\n                period: 15,\n                // 波纹绘制方式\n                brushType: \"fill\"\n              },\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              //是否开启鼠标 hover 的提示动画效果。\n              hoverAnimation: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2,\n              },\n              symbol: 'circle',\n              // symbolSize: axis_max,\n              symbolSize: function (center_data) {\n                // return center_data[3]\n                return chart_width / 10;\n              },\n              // 图标样式\n              itemStyle: {\n                color: \"rgba(157,211,250,0.5)\",\n\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 20,\n                fontWeight: \"bold\",\n                position: \"inside\",\n              },\n              data: center_data\n            },\n            {\n              // 下降的点-----------------------\n              name: \"下降\",\n              zlevel: 2,\n              // 涟漪散点图\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              showEffectOn: \"emphasis\",\n              // 散点图\n              // type: \"scatter\",\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2\n              },\n              symbol: 'circle',\n              // symbolSize: contain_width / 30,\n              symbolSize: function (params) {\n                // return down_data[3]\n                // return (chart.parentNode.parentNode.clientWidth) / 30;\n                return chart_width/20 + 2 * Math.log(params[3]);\n              },\n              // 图标样式\n              itemStyle: {\n                // color: \"#45c14f\",\n                // color: \"rgba(75,192,192,0.7)\",\n                color: \"rgba(141, 218, 145,1)\",\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 10,\n                position: \"bottom\",\n              },\n              emphasis: {\n                label: {\n                  fontWeight: \"bold\",\n                  fontSize: 16,\n                  backgroundColor: \"#fff\",\n                }\n              },\n              data: down_data\n            },\n            {\n              // 上升的点-----------------------\n              name: \"上升\",\n              zlevel: 2,\n              // 涟漪散点图\n              type: \"effectScatter\",\n              effectType: \"ripple\",\n              showEffectOn: \"emphasis\",\n              // 散点图\n              // type: \"scatter\",\n              // 图例 hover 时的联动高亮\n              legendHoverLink: true,\n              // 使用的直角坐标系\n              // coordinateSystem: \"cartesian2d\",\n              encode: {\n                x: 0,\n                y: 1,\n                label: 2,\n              },\n              symbol: 'circle',\n              // symbolSize: contain_width / 30,\n              symbolSize: function (params) {\n                return chart_width/20 + 2 * Math.log(params[3]);\n              },\n              // 图标样式\n              itemStyle: {\n                // color: \"#FFCC66\",\n                color: \"rgba(255,206,86,0.7)\",\n              },\n              label: {\n                show: true,\n                color: \"#555\",\n                fontSize: 10,\n                position: \"bottom\",\n              },\n              emphasis: {\n                label: {\n                  fontWeight: \"bold\",\n                  fontSize: 16,\n                  backgroundColor: \"#fff\"\n                }\n              },\n              data: up_data\n            }\n          ],\n          // x轴--------------------------------------------------\n          xAxis: [{\n            show: true,\n            zlevel: 20,\n            type: 'value',\n            // 坐标轴最大最小值\n            min: -axis_max,\n            max: axis_max,\n            axisLine: {\n              lineStyle: {\n                color: \"#aaa\",\n                opacity: 0.5\n              }\n            },\n            axisLabel: {\n              show: false,\n              margin: chart_height / 25,\n              fontWeight: \"bold\",\n              formatter: function (value, index) {\n                var xlabel = [\"弱相关\", \" \", '强相关', \" \", '强相关', \" \", '弱相关'];\n                return xlabel[index]\n              },\n            },\n            // x轴分割线\n            splitLine: {\n              show: false,\n            },\n            splitArea: {\n              show: false,\n            },\n          }],\n          // y轴--------------------------------------------------\n          yAxis: [{\n            show: false,\n            zlevel: 0,\n            type: 'value',\n            top: \"10%\",\n            min: -axis_max,\n            max: axis_max,\n          }],\n        }\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          // $router.push({\n          //   path: \"/displayInfo\",\n          //   query: {\n          //     query: params.data[2]\n          //   }\n          // });\n          $search.to_display(params.data[2])\n\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* max-height: 400px; */\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"],"sourceRoot":"src/components/graphs"}]}