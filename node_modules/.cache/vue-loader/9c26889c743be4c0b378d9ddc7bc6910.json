{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_bar.vue?vue&type=style&index=0&id=1c50a02c&scoped=true&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_bar.vue","mtime":1584778829000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n    background-color: '#F0F5F8';\n    \n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n  .pricing-block-content el-tabs{\n\t  width:100%;height:100%;\n  }\n  @import 'css/style.css';\n",{"version":3,"sources":["graph_bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graph_bar.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n<div>\n\n\t<div class=\"pricing-block\">\n\t\t<div class=\"pricing-block-content\">\n\t\t\t<h3>竞争网络图片</h3>\n\t\t\t<ul>\n\t\t\t\t<li>情报1</li>\n\t\t\t\t<li>情报2</li>\n\t\t\t</ul>\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</div>\n\t</div>\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n\n    export default {\n        name: \"bar\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord:{\n                type:String,\n                default(){\n                    return \"keyString\"\n                }\n            }\n        },\n        data() {\n            return {\n                 //tabItem:\"AllTab\"\n            }\n        },\n        mounted() {\n            // this.draw_linefold();\n            this.start_draw();\n        },\n\n        methods: {\n            start_draw() {\n             \n                //console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (let i in itemData){\n                    let id = this.keyWord+\"_\"+i;\n                    this.draw_bar(id,itemData[i]);\n                }\n            },\n            draw_bar(id, data) {\n\n                let title = data['title'];\n                let testdata = data['data'];\n                let chart = document.getElementById(id);\n               \n                var initial = function () {\n                \n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                var series = [];\n                \n                function compare(property){\n                    return function (obj1,obj2){\n                        let ave1=0;\n                        let ave2=0;\n                        for(var i in obj1[property])\n                            ave1+=i;\n                        for(var i in obj2[property])\n                            ave2+=i;\n                        ave1/=7;  ave2/=7;\n                        return ave1-ave2;\n                     }\n                }\n                \n                testdata=testdata.sort(compare('value'));\n                console.log(\"testdata\");\n                console.log(testdata);\n                var count=0;\n                for (var i in testdata)\n                {\n                    count+=1;\n                    if(count>10) break;\n                    var name =testdata[i].name\n                    var value = testdata[i].value;\n                    series.push({\n                        name: name,\n                        type: 'bar',\n                        stack:'总量',\n                        label: {\n                                    show: true,\n                                    color:'black',\n                                    position: 'top'\n                        },\n                        data: value\n                        \n                    })\n                }\n                \n                const option = {\n                         tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                            }\n                        },\n                        legend: {\n                                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '4%',\n                            bottom: '3%',\n                            containLabel: true\n                        },\n                        xAxis: {\n                            type: 'value'\n                        },\n                        yAxis: {\n                            type: 'category',\n                            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n                        },\n                        series:series\n                };\n\n                myChart.setOption(option);\n\n             \n                window.addEventListener('resize', function () {\n                    initial();\n                    // chart.style.width = this.initial_style(chart);\n                    myChart.resize()\n                })\n\n              \n                myChart.on(\"click\",function(params){\n                    let query = params['seriesName'].toLowerCase();\n                    $search.to_display(query);\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n    background-color: '#F0F5F8';\n    \n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n  .pricing-block-content el-tabs{\n\t  width:100%;height:100%;\n  }\n  @import 'css/style.css';\n</style>\n"]}]}