{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/display_info/DisplayVisual_f8_tree.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/display_info/DisplayVisual_f8_tree.vue","mtime":1583567051000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.display-graph {\n  margin: 1em 0;\n  display:block;\n}\n",{"version":3,"sources":["DisplayVisual_f8_tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA","file":"DisplayVisual_f8_tree.vue","sourceRoot":"src/components/display_info","sourcesContent":["<template>\n  <div class=\"display-visual\">\n\n    <!--根据数据循环生成所有的图的挂载点-->\n    <div class=\"display-graph\" v-for=\"(graphData, index) in graph_data\" :key=index>\n      <!-- <div :id=\"index\">图形id：{{index}}。这个图形还未完成  请期待......</div>  -->\n      <div :id=\"index\" class=\"col-3\"></div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import Vue from 'vue'\n  import tree from \"../graphs/graph_tree.vue\"\n  export default {\n    name: \"DisplayVisual_f8_tree\",\n    data() {\n      return {\n        // iftree: true\n      }\n    },\n    mounted() {\n      // 生成可视化图表\n      // this.generate_charts();\n    },\n    computed: {\n      graph_data() {\n        return this.$bus.get_result_graph();\n      },\n\n    },\n    /*\n    还需要优化的问题：\n    1. 按需加载图表组件，不要一次性导入全部组件。异步组件\n    */\n    updated: function() {\n      // generate_charts需要在dom元素更新之后才能调用，故使用updated，而不是用mounted\n      this.generate_charts(); \n    },\n    methods:{ \n      // 生成所有图\n      generate_charts() { \n\n        // 获取可视化数据\n        let visual_data = this.$bus.get_result_graph();\n\n        // 获得每一个图的数据，调用图表组件，传入数据\n        for (let key in visual_data) {\n          // console.log(key);\n          // 调用constructor\n          let ifUnknown = JSON.stringify(visual_data[key]);\n          // console.log(ifUnknown);\n          // console.log(ifUnknown.indexOf('\"data\":\"UNKNOWN\"'));\n          // data数据存在\n          if(ifUnknown.indexOf('\"data\":\"UNKNOWN\"') === -1){ \n              if (this.typeOf(key)){\n                // console.log(\"key==\"+key+\",visual_data[key]==\"+visual_data[key]);\n                // 调用construct_graph方法，传入key和data\n                this.construct_graph(key,visual_data[key]);\n              }\n          }else { // data数据不存在\n            console.log(\"===================================\");\n            console.log(key+\"图的data数据为unknown\");\n            console.log(\"===================================\");\n          }\n        }\n      },\n      // 构造图组件子类，实现挂载\n      construct_graph(keyString, data) {\n        // Vue.extend全局API，组件构造器，必须要import Vue才能使用\n        let component_subclass = Vue.extend(this.typeOf(keyString));\n        // new一个子类，实现挂载\n        new component_subclass({\n          // propsData：数据传输管道，将图的数据传给调用的组件\n          propsData:{\n            items: data,\n            keyWord: keyString\n          }\n          //$mount方法将构造器返回的\"未挂载的\"组件\"graph_linefold\"挂载到相应id的挂载点\n        }).$mount(\"#\" + keyString);\n      },\n\n      // 查询key对应需要的组件\n      typeOf(keyString){\n        // 所有图的key，用数字表示图的类型。\n        let keyType = {\n          \"tree_Recommended_Words_v1\": tree\n        }\n        return keyType[keyString];\n      }\n    },\n    components: {\n      \"tree_Recommended_Words_v1\": tree\n      // 'test':function(resolve) {\n      //   require(['../test.vue'],resolve);\n    }\n  }\n\n</script>\n\n<style>\n\n.display-graph {\n  margin: 1em 0;\n  display:block;\n}\n</style>\n:\n"]}]}