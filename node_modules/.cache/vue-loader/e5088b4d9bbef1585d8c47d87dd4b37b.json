{"remainingRequest":"/home/ky02/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/home/ky02/ai-project/src/views/transplant/comps/DimensionItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ky02/ai-project/src/views/transplant/comps/DimensionItem.vue","mtime":1574946999007},{"path":"/home/ky02/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018363},{"path":"/home/ky02/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019787},{"path":"/home/ky02/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018363},{"path":"/home/ky02/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026300}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"DimensionItem\",\n  props: {\n    data: {\n      type: Object,\n      default () {\n        return {\n          \"test\": \"\"\n        }\n      }\n    },\n  },\n  computed: {\n    graphType() {\n      let tmpArr = this.data.graphName.split(\"_\");\n      return tmpArr[tmpArr.length-1];\n    },\n    getGraphData() {\n      let gName = this.data.graphName;\n      return (this.$bus.get_result_graph())[gName];\n    }\n  },\n  components: {\n    \"pie\": () => import(\"./../../../components/graphs/graph_pie.vue\"),\n    \"relation\": () => import(\"./../../../components/graphs/graph_relation.vue\"),\n    \"entity\": () => import(\"./../../../components/graphs/graph_entity.vue\"),\n    \"linefold\": () => import(\"./../../../components/graphs/graph_linefold.vue\"),\n    \"bar\": () => import(\"./../../../components/graphs/graph_bar.vue\")\n  },\n  methods: {\n    // getGraphData() {\n    //   let gName = this.data.graphName;\n    //   return (this.$bus.get_result_graph())[gName];\n    // }\n  }\n}\n",{"version":3,"sources":["DimensionItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DimensionItem.vue","sourceRoot":"src/views/transplant/comps","sourcesContent":["<template>\n  <div id=\"dimension-item\">\n    <div \n      class=\"title _bd-bottom-blue\"\n      v-if=\"data.dimension\"\n    >{{data.dimension}}\n    </div>\n    <ul class=\"content\">\n      <li \n        v-for=\"(detail, index) in data.data\"\n        :key=\"index\"\n        class=\"_bd-bottom-grey\"\n      >{{detail}}</li>\n    </ul>\n    <div \n      class=\"dimension-graph\"\n      v-if=\"data.graphName\">\n      <component \n        :is=\"graphType\"\n        :items=\"getGraphData\"\n        :keyWord=\"data.graphName\"\n        :key=\"data.graphName\"></component>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"DimensionItem\",\n    props: {\n      data: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"\"\n          }\n        }\n      },\n    },\n    computed: {\n      graphType() {\n        let tmpArr = this.data.graphName.split(\"_\");\n        return tmpArr[tmpArr.length-1];\n      },\n      getGraphData() {\n        let gName = this.data.graphName;\n        return (this.$bus.get_result_graph())[gName];\n      }\n    },\n    components: {\n      \"pie\": () => import(\"./../../../components/graphs/graph_pie.vue\"),\n      \"relation\": () => import(\"./../../../components/graphs/graph_relation.vue\"),\n      \"entity\": () => import(\"./../../../components/graphs/graph_entity.vue\"),\n      \"linefold\": () => import(\"./../../../components/graphs/graph_linefold.vue\"),\n      \"bar\": () => import(\"./../../../components/graphs/graph_bar.vue\")\n    },\n    methods: {\n      // getGraphData() {\n      //   let gName = this.data.graphName;\n      //   return (this.$bus.get_result_graph())[gName];\n      // }\n    }\n  }\n</script>\n\n<style lang=\"less\" scoped>\nul {\n  list-style: none;\n  margin: .2rem .1rem;\n  padding: 1rem;\n}\n\n#dimension-item {\n  .title {\n    font-size: 1.2rem;\n    font-weight: bold;\n    text-transform: uppercase;\n  }\n\n  .content {\n    text-transform: capitalize;\n\n    li {\n      margin: 10px auto;\n    }\n  }\n}\n</style>\n"]}]}