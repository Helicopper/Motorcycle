{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_scatter_searchFrequency.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_scatter_searchFrequency.vue","mtime":1583572250000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport $search from \"./../../util/search.js\"\nlet echarts = require('echarts');\n\nexport default {\n    name: \"scatter_searchFrequency\",\n    props: {\n        items: {\n            type: Object,\n            default () {\n                return {\n                    \"test\": \"test\"\n                }\n            }\n        },\n        keyWord:{\n            type:String,\n            default(){\n                return \"keyString\"\n            }\n        }\n    },\n    data() {\n        return {\n             //tabItem:\"AllTab\"\n        }\n    },\n    mounted() {\n        // this.draw_linefold();\n        this.start_draw();\n    },\n\n    methods: {\n        start_draw() {\n           \n            let itemData = this.items;\n            for (let i in itemData){\n                console.log(\"key :\"+this.keyWord+\"_\"+i);\n                let id = this.keyWord+\"_\"+i;\n                this.draw_scatter_searchFrequency(id,itemData[i]);\n            }\n        },\n        draw_scatter_searchFrequency(id, data) {\n\n            let title = data['title'];\n            let testdata = data['data'];\n            console.log(\"testdata\");\n            console.log(testdata);\n            let chart = document.getElementById(id);\n             \n            var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a','7a', '8a', '9a','10a','11a','12p', '1p', '2p', '3p', '4p', '5p','6p', '7p', '8p', '9p', '10p', '11p'];\n            var days = ['Saturday', 'Friday', 'Thursday','Wednesday', 'Tuesday', 'Monday', 'Sunday'];\n           \n            var initial = function () {\n              \n                let chartParent = chart.parentNode.parentNode;\n                chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                chart.style.margin = \"0 auto\";\n                chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n            }\n            initial();\n\n            let myChart = echarts.init(chart);\n            let datakey = [];\n           \n            \n            const option = {\n                     tooltip: {\n                    position: 'top'\n                    },\n                     title: [],\n                    singleAxis: [],\n                    series: []\n            };\n\n\n            echarts.util.each(days, function (day, idx) {\n                option.title.push({\n                    textBaseline: 'middle',\n                    top: (idx + 0.5) * 100 / 7 + '%',\n                    text: day\n                });\n                option.singleAxis.push({\n                    left: 150,\n                    type: 'category',\n                    boundaryGap: false,\n                    data: hours,\n                    top: (idx * 100 / 7 + 5) + '%',\n                    height: (100 / 7 - 10) + '%',\n                    axisLabel: {\n                        interval: 2\n                    }\n                });\n                option.series.push({\n                        singleAxisIndex: idx,\n                        coordinateSystem: 'singleAxis',\n                        type: 'scatter',\n                     data: [],\n                        symbolSize: function (dataItem) {\n                            return dataItem[1] * 4;\n                        }\n                });\n            });\n\n            echarts.util.each(data, function (dataItem) {\n                option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\n            });\n           \n            myChart.setOption(option);\n\n           \n            // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n            // window.onresize = function(){\n            //     console.log(\"window resize!\")\n            //     initial();\n            //     myChart.resize();\n            //     console.log(\"myChart resize!\")\n            // }\n\n            // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n            window.addEventListener('resize', function () \n            {\n                initial();\n           \n                myChart.resize()\n            })\n\n            myChart.on(\"click\",function(params){\n                // console.log(params);\n                // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                // $router.push({\n                //     path:\"/displayInfo\",\n                //     query:{query:params['seriesName'].toLowerCase()}\n                // })\n                let query = params['seriesName'].toLowerCase();\n                $search.to_display(query);\n            })\n            console.log(\"哈哈哈\");\n        }\n    }\n}\n",{"version":3,"sources":["graph_scatter_searchFrequency.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graph_scatter_searchFrequency.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n<div>\n    <!-- <el-tabs v-model=\"tabItem\" type=\"border-card\">\n  <el-tab-pane label=\"Paper\">\n      <div  v-if=\"'Paper' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"News\">\n      <div v-if=\"'News' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"Patent\">\n      <p v-if=\"'Patent' === tabItem\">ttttttttttttttttttttttt</p>\n  </el-tab-pane>\n</el-tabs> -->\n\t<div class=\"pricing-block\">\n\t\t<div class=\"pricing-block-content\">\n\t\t\t<h3>竞争网络图片</h3>\n\t\t\t<ul>\n\t\t\t\t<li>情报1</li>\n\t\t\t\t<li>情报2</li>\n\t\t\t</ul>\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</div>\n\t</div>\n<!--<el-tabs type=\"border-card\">\n  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n      <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n  </el-tab-pane>\n</el-tabs>\n-->\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n\n    export default {\n        name: \"scatter_searchFrequency\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord:{\n                type:String,\n                default(){\n                    return \"keyString\"\n                }\n            }\n        },\n        data() {\n            return {\n                 //tabItem:\"AllTab\"\n            }\n        },\n        mounted() {\n            // this.draw_linefold();\n            this.start_draw();\n        },\n\n        methods: {\n            start_draw() {\n               \n                let itemData = this.items;\n                for (let i in itemData){\n                    console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    this.draw_scatter_searchFrequency(id,itemData[i]);\n                }\n            },\n            draw_scatter_searchFrequency(id, data) {\n\n                let title = data['title'];\n                let testdata = data['data'];\n                console.log(\"testdata\");\n                console.log(testdata);\n                let chart = document.getElementById(id);\n                 \n                var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a','7a', '8a', '9a','10a','11a','12p', '1p', '2p', '3p', '4p', '5p','6p', '7p', '8p', '9p', '10p', '11p'];\n                var days = ['Saturday', 'Friday', 'Thursday','Wednesday', 'Tuesday', 'Monday', 'Sunday'];\n               \n                var initial = function () {\n                  \n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                let datakey = [];\n               \n                \n                const option = {\n                         tooltip: {\n                        position: 'top'\n                        },\n                         title: [],\n                        singleAxis: [],\n                        series: []\n                };\n\n\n                echarts.util.each(days, function (day, idx) {\n                    option.title.push({\n                        textBaseline: 'middle',\n                        top: (idx + 0.5) * 100 / 7 + '%',\n                        text: day\n                    });\n                    option.singleAxis.push({\n                        left: 150,\n                        type: 'category',\n                        boundaryGap: false,\n                        data: hours,\n                        top: (idx * 100 / 7 + 5) + '%',\n                        height: (100 / 7 - 10) + '%',\n                        axisLabel: {\n                            interval: 2\n                        }\n                    });\n                    option.series.push({\n                            singleAxisIndex: idx,\n                            coordinateSystem: 'singleAxis',\n                            type: 'scatter',\n                         data: [],\n                            symbolSize: function (dataItem) {\n                                return dataItem[1] * 4;\n                            }\n                    });\n                });\n\n                echarts.util.each(data, function (dataItem) {\n                    option.series[dataItem[0]].data.push([dataItem[1], dataItem[2]]);\n                });\n               \n                myChart.setOption(option);\n\n               \n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () \n                {\n                    initial();\n               \n                    myChart.resize()\n                })\n\n                myChart.on(\"click\",function(params){\n                    // console.log(params);\n                    // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                    // $router.push({\n                    //     path:\"/displayInfo\",\n                    //     query:{query:params['seriesName'].toLowerCase()}\n                    // })\n                    let query = params['seriesName'].toLowerCase();\n                    $search.to_display(query);\n                })\n                console.log(\"哈哈哈\");\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n    background-color: '#F0F5F8';\n    \n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n  .pricing-block-content el-tabs{\n  \t  width:100%;height:100%;\n  }\n  @import 'css/style.css';\n</style>\n"]}]}