{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_river.vue?vue&type=style&index=0&id=80adbb3c&scoped=true&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_river.vue","mtime":1574946998000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  min-height: 300px;\n  /* max-height: 400px; */\n}\n\n.tabs {\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n  padding: 10px;\n  /* border-radius: 5px; */\n}\n",{"version":3,"sources":["graph_river.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"graph_river.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <!-- 主题河流图 -->\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n    name: \"river\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (let i in itemData) {\n          let id = this.keyWord + \"_\" + i;\n          this.draw_river(id, itemData[i]);\n        }\n      },\n      // 根据数据生成一个主干事件河流（时间贯穿始终）\n      transform_data(data) {\n        let result = data;\n        // 第一个数据的名字label\n        let label = result[0][2];\n        let year_part = [];\n        let year_all = [];\n        // 取出第一个label所有的年份，以及所有年份\n        for (let i = 0; i < result.length; i++) {\n          if (result[i][2] === label) {\n            year_part.push(result[i][0])\n          };\n          if (year_all.indexOf(result[i][0]) === -1) {\n            year_all.push(result[i][0])\n          };\n        }\n        for (let i = 0; i < year_all.length; i++) {\n          if (year_part.indexOf(year_all[i]) === -1) {\n            result.push([year_all[i], 0, label]);\n          }\n        }\n        return result;\n      },\n      draw_river(id, data) {\n        // console.log(JSON.stringify(data))\n        let graph_title = data.title;\n        let graph_data = data.data;\n        // console.log(graph_data);\n\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          chart.style.margin = \"0 auto\";\n          chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n        }\n        initial();\n\n        // echarts 实例初始化\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: graph_title,\n            subtext: \"\",\n            x: \"1%\",\n            y: \"1%\",\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {\n                show: true,\n                type: \"png\",\n                pixelRatio: 3\n              },\n              restore: {\n                show: true\n              }\n            }\n          },\n          dataZoom: {\n            type: \"slider\",\n            start: 0,\n            end: 100,\n            // 数据缩放最小区域，百分比\n            minSpan: 30,\n            bottom: \"1%\",\n          },\n          tooltip: {\n            trigger: \"axis\",\n            // 悬浮框限制在容器内\n            // confine: true,\n            // enterable: true,\n            position: function (pos, params, dom, rect, size) {\n              // 鼠标在左侧时 tooltip 显示到右侧，鼠标在右侧时 tooltip 显示到左侧。\n              var obj = {\n                top: \"10%\"\n              };\n              obj[['left', 'right'][+(pos[0] < size.viewSize[0] / 2)]] = 5;\n              return obj;\n            },\n            axisPointer: {\n              type: 'line',\n              lineStyle: {\n                color: 'rgba(0,0,0,0.5)',\n                width: 1,\n                type: 'solid'\n              }\n            }\n          },\n          legend: {\n            show: true,\n            type: \"scroll\",\n            // 纵向\n            // orient: 'vertical',\n            // right: \"5%\",\n            // left: \"80%\",\n            // left: \"2%\",\n            // right: \"19%\",\n            // top: \"5%\",\n            // bottom: \"5%\",\n            orient: 'horizontal',\n            left: \"2%\",\n            right: \"2%\",\n            top: \"10%\",\n            // top: \"\",\n            // 横向\n            tooltip: {\n              show: true,\n            }\n          },\n          singleAxis: {\n            // right: \"22%\",\n            // left: \"5%\",\n            left: \"5%\",\n            right: \"5%\",\n            top: \"15%\",\n            bottom: \"20%\",\n            type: 'time',\n            min: 'dataMin',\n            max: 'dataMax',\n            axisTick: {\n              interval: 0\n            },\n            axisLabel: {\n              show: true,\n              showMinLabel: true,\n              showMaxLabel: true,\n            },\n            axisPointer: {\n              animation: true,\n              label: {\n                show: true\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                type: 'dashed',\n                opacity: 0.2\n              }\n            }\n          },\n          series: [{\n            type: 'themeRiver',\n            label: {\n              show: false,\n              position: \"insideTopLeft\",\n              fontWeight: \"bold\",\n              fontSize: 12,\n              offset: [50, 0]\n              // color: \"auto\"\n            },\n            itemStyle: {},\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.8)'\n              }\n            },\n            data: this.transform_data(graph_data)\n          }]\n        };\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          // console.log(params);\n          // window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n          // $search.to_display(params.data.name);\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* max-height: 400px; */\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"]}]}