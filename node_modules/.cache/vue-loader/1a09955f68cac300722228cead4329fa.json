{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_bar.vue","mtime":1590640467000},{"path":"/ssd1/gfy/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":1574947019000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n      name: \"bar\",\n      props: {\n          items: {\n              type: Object,\n              default () {\n                  return {\n                      \"test\": \"test\"\n                  }\n              }\n          },\n          keyWord:{\n              type:String,\n              default(){\n                  return \"keyString\"\n              }\n          }\n      },\n      data() {\n          return {\n               //tabItem:\"AllTab\"\n          }\n      },\n      mounted() {\n          // this.draw_linefold();\n          this.start_draw();\n      },\n\n      methods: {\n          start_draw() {\n           \n              //console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n              let itemData = this.items;\n              // console.log(\"itemData=\"+JSON.stringify(itemData));\n              for (let i in itemData){\n                  let id = this.keyWord+\"_\"+i;\n                  this.draw_bar(id,itemData[i]);\n              }\n          },\n          draw_bar(id, data) {\n\n              let title = data['title'];\n              let testdata = data['data'];\n              let chart = document.getElementById(id);\n             \n              var initial = function () {\n              \n                  let chartParent = chart.parentNode.parentNode;\n                  chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                  chart.style.margin = \"0 auto\";\n                  chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n              }\n              initial();\n\n              let myChart = echarts.init(chart);\n              var series = [];\n              \n              function compare(property){\n                  return function (obj1,obj2){\n                      let ave1=0;\n                      let ave2=0;\n                      for(var i in obj1[property])\n                          ave1+=i;\n                      for(var i in obj2[property])\n                          ave2+=i;\n                      ave1/=7;  ave2/=7;\n                      return ave1-ave2;\n                   }\n              }\n              \n              testdata=testdata.sort(compare('value'));\n              console.log(\"testdata\");\n              console.log(testdata);\n              var count=0;\n              for (var i in testdata)\n              {\n                  count+=1;\n                  if(count>10) break;\n                  var name =testdata[i].name\n                  var value = testdata[i].value;\n                  series.push({\n                      name: name,\n                      type: 'bar',\n                      stack:'总量',\n                      label: {\n                                  show: true,\n                                  color:'black',\n                                  position: 'top'\n                      },\n                      data: value\n                      \n                  })\n              }\n              \n              const option = {\n                       tooltip: {\n                          trigger: 'axis',\n                          axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                              type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                          }\n                      },\n                      legend: {\n                              data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n                      },\n                      grid: {\n                          left: '3%',\n                          right: '4%',\n                          bottom: '3%',\n                          containLabel: true\n                      },\n                      xAxis: {\n                          type: 'value'\n                      },\n                      yAxis: {\n                          type: 'category',\n                          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n                      },\n                       // color:['#1e824c', '#049372','#019875',  '#16a085','#03a678',\n // '#4daf7c', '#90c695'],\n                       color:['rgb(132,248,179)','rgb(134,243,189)','rgb(135,239,195)','rgb(136,236,201)',\n'rgb(137,231,209)','rgb(138,227,216)','rgb(140,223,223)','rgb(140,220,228)',\n'rgb(141,217,233)','rgb(142,213,240)',\n],\n                      series:series\n              };\n\n              myChart.setOption(option);\n\n           \n              window.addEventListener('resize', function () {\n                  initial();\n                  // chart.style.width = this.initial_style(chart);\n                  myChart.resize()\n              })\n\n            \n              myChart.on(\"click\",function(params){\n                  let query = params['seriesName'].toLowerCase();\n                  $search.to_display(query);\n              })\n          }\n      }\n  }\n",{"version":3,"sources":["graph_bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"graph_bar.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <div class=\"hellotheworld\">\n\t<div class=\"wrap\">\n\t\t<aside class=\"left\">\n\t\t\t<p>figure3</p>\n\t\t\t<div class=\"name\">竞价词投入</div>\n\t\t\t<ul>\n\t\t\t\t<li>类型：条形图</li>\n\t\t\t\t<li>纵轴：时间</li>\n\t\t\t\t<li>横轴：投入</li>\n\t\t\t</ul>\n\t\t\t<div class=\"texts\">图片描述：描述[广告商]在多个竞价词上面的投入情况。其中投入=点击次数*单次点击价格，您可以通过此图，综合性了解不同时段的不同竞价词的被检索情况和大致价格，评估单个广告商带来的收益。</div>\n\t\t</aside>\n\t\t<section class=\"right\">\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</section>\n\t</div>\n\t<div class=\"blank\"></div>\n  </div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n\n    export default {\n        name: \"bar\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord:{\n                type:String,\n                default(){\n                    return \"keyString\"\n                }\n            }\n        },\n        data() {\n            return {\n                 //tabItem:\"AllTab\"\n            }\n        },\n        mounted() {\n            // this.draw_linefold();\n            this.start_draw();\n        },\n\n        methods: {\n            start_draw() {\n             \n                //console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (let i in itemData){\n                    let id = this.keyWord+\"_\"+i;\n                    this.draw_bar(id,itemData[i]);\n                }\n            },\n            draw_bar(id, data) {\n\n                let title = data['title'];\n                let testdata = data['data'];\n                let chart = document.getElementById(id);\n               \n                var initial = function () {\n                \n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                var series = [];\n                \n                function compare(property){\n                    return function (obj1,obj2){\n                        let ave1=0;\n                        let ave2=0;\n                        for(var i in obj1[property])\n                            ave1+=i;\n                        for(var i in obj2[property])\n                            ave2+=i;\n                        ave1/=7;  ave2/=7;\n                        return ave1-ave2;\n                     }\n                }\n                \n                testdata=testdata.sort(compare('value'));\n                console.log(\"testdata\");\n                console.log(testdata);\n                var count=0;\n                for (var i in testdata)\n                {\n                    count+=1;\n                    if(count>10) break;\n                    var name =testdata[i].name\n                    var value = testdata[i].value;\n                    series.push({\n                        name: name,\n                        type: 'bar',\n                        stack:'总量',\n                        label: {\n                                    show: true,\n                                    color:'black',\n                                    position: 'top'\n                        },\n                        data: value\n                        \n                    })\n                }\n                \n                const option = {\n                         tooltip: {\n                            trigger: 'axis',\n                            axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                            }\n                        },\n                        legend: {\n                                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n                        },\n                        grid: {\n                            left: '3%',\n                            right: '4%',\n                            bottom: '3%',\n                            containLabel: true\n                        },\n                        xAxis: {\n                            type: 'value'\n                        },\n                        yAxis: {\n                            type: 'category',\n                            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n                        },\n                         // color:['#1e824c', '#049372','#019875',  '#16a085','#03a678',\n   // '#4daf7c', '#90c695'],\n                         color:['rgb(132,248,179)','rgb(134,243,189)','rgb(135,239,195)','rgb(136,236,201)',\n  'rgb(137,231,209)','rgb(138,227,216)','rgb(140,223,223)','rgb(140,220,228)',\n  'rgb(141,217,233)','rgb(142,213,240)',\n  ],\n                        series:series\n                };\n\n                myChart.setOption(option);\n\n             \n                window.addEventListener('resize', function () {\n                    initial();\n                    // chart.style.width = this.initial_style(chart);\n                    myChart.resize()\n                })\n\n              \n                myChart.on(\"click\",function(params){\n                    let query = params['seriesName'].toLowerCase();\n                    $search.to_display(query);\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .blank{\n\t\twidth:600px;\n\t\theight:550px;}\n\t\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n</style>\n"]}]}