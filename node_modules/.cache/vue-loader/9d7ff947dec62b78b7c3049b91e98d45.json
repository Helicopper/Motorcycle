{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_rose.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_rose.vue","mtime":1585038304000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  min-height: 300px;\n  /* height: 400px; */\n}\n.tabs {\n    box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n    padding:10px;\n    /* border-radius: 5px; */\n}\n",{"version":3,"sources":["graph_rose.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graph_rose.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n<div>\n    <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs>\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n\n    let echarts = require('echarts');\n    export default {\n        name: \"rose\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n       \n        methods: {\n            start_draw() {\n               \n                //console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                \n                for (let i in itemData){\n                    let id = this.keyWord+'_'+i;\n                    this.draw_rose(id,itemData[i]);\n                }\n            },\n            draw_rose(id,data) {\n                let chart = document.getElementById(id);\n                // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n                var initial = function () {\n            \n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n                let title = data['title']\n                let graph_data = data['data']\n                let legendData = Object.keys(graph_data);\n                let seriesData = [];\n                for (var key in graph_data) {\n                    seriesData.push({\n                        name: graph_data[key].name,\n                        value: graph_data[key].avePrice,\n                        influence:graph_data[key].influence\n                    });\n                }\n\n                //console.log(\"seriesData\");\n                //console.log(seriesData);\n                let myChart = echarts.init(chart);\n\n                const option = {\n                  title: {\n                      text: title,\n                  \n                      y: 'top'\n                  },\n                  tooltip: {\n                      trigger: 'item',\n                      formatter: \"{b} : {c} ({d}%)\"\n                  },\n                  legend: {\n                      \n                    type: 'scroll', // 图例过多加上滚动条\n                      show:true,\n                      top:\"10%\",\n                      data: legendData,\n                  },\n                  color:['rgb(212,158,78)','rgb(144,178,156)','rgb(164,207,187)',\n       \t\t\t\t'rgb(220,155,131)','rgb(128,179,185)','rgb(91,111,124)','rgb(206,93,90)'],\n                  calculable: true,\n                  series: [\n                      {\n                          type: 'pie',\n                          //radius: '55%',\n                          //center: ['50%', '65%'],\n                            radius: [30, 110],\n                           // center: ['75%', '50%'],\n                            roseType: 'area',\n                          \n                          itemStyle: {\n                              emphasis: {\n                                  label: {\n                                      show: true,\n                                      textStyle: {\n                                          fontWeight: 'bold'\n                                      },\n                                      shadowBlur: 10,\n                                      shadowOffsetX: 0,\n                                      shadowColor: 'rgba(0, 0, 0, 0.5)'\n                                  }\n                              }\n                          },\n                          data: seriesData,\n                          //roseType: 'radius'  // 玫瑰图\n                      }\n                  ]\n              };\n\n                myChart.setOption(option);\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n               // myChart.on(\"click\",function(params){\n                    \n                    //$search.to_display3(\"2\",+\",\"+params.data.name);\n                //})\n            }\n        }\n    }\n</script>\n<style>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n</style>\n"]}]}