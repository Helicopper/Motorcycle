{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_tree.vue?vue&type=style&index=0&id=0680df95&scoped=true&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_tree.vue","mtime":1585040831000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  min-height: 300px;\n  /* max-height: 400px; */\n}\n\n.tabs {\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n  padding: 10px;\n  /* border-radius: 5px; */\n}\n",{"version":3,"sources":["graph_tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"graph_tree.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <!-- 树图  -->\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  import $search from \"./../../util/search.js\"\n  let echarts = require('echarts');\n\n  export default {\n    name: \"tree\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (var i in itemData) {\n          console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_tree(id, itemData[i]);\n        }\n      },\n      draw_tree(id, data) {\n        let graph_data = data.data;\n        let graph_title = data.title;\n\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          chart.style.margin = \"0 auto\";\n          chart.style.height = (chartParent.clientWidth * 0.75 - 30) + \"px\";\n        }\n        initial();\n\n        // 组件高度\n        let contain_height = chart.offsetHeight;\n        // 组件宽度\n        let contain_width = chart.offsetWidth;\n\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: graph_title,\n            // subtext: \"副标题\",\n            show: true,\n          },\n          toolbox: {\n            show: true,\n            feature: {\n              saveAsImage: {\n                show: true,\n                type: \"png\",\n                pixelRatio: 3\n              },\n              restore: {\n                show: true\n              }\n            }\n          },\n          tooltip: {\n            trigger: 'item',\n            triggerOn: 'mousemove'\n          },\n          legend: {\n            top: '2%',\n            left: '3%',\n            orient: 'vertical',\n            data: {\n              // 单棵树的名字\n              name: 'tree2',\n              icon: 'rectangle'\n            },\n          },\n          \n          series: {\n            type: 'tree',\n            name: 'test-tree',\n            // top: '20%',\n\n            top: '5%',\n            left: '27%',\n            bottom: '20%',\n            right: '60%',\n\n            layout: 'radial',//环形\n\n            // 树的初始层数，从0开始\n            initialTreeDepth: 2,\n            // 子树折叠和展开的交互\n            expandAndCollapse: true,\n            // 初始动画的时长\n            animationDuration: 300,\n            // 数据更新动画的时长。\n            animationDurationUpdate: 750,\n\n            // 输入数据\n            // 若series_data最外层是对象{}，则要加一层[]\n            data: [graph_data],\n\n            // 可以设置回调函数 (value: Array|number, params: Object) => number|Array\n            symbolSize: 10,\n\n            label: {\n              position: 'left',\n              verticalAlign: 'middle',\n              align: 'right',\n              fontSize: '25'\n            },\n\n            leaves: {\n              label: {\n                position: 'right',\n                verticalAlign: 'middle',\n                align: 'left',\n                //fontSize: 30\n                //color:'green'\n\n              }\n\n            },\n\n            emphasis: {\n              itemStyle: {\n                color: \"#ff4040\",\n                // borderColor: \"#555\",\n              },\n              label: {\n                fontWeight: \"bold\",\n                // fontSize:20,\n              },\n              lineStyle: {\n                color: \"#fff\",\n                width: 2,\n              }\n            },\n          }\n        }\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n          myChart.on(\"click\", function (params) {\n          \n            console.log(\"CLICK\");\n          //if (params.dataType === \"node\") {\n              \n              console.log(params.data.name);\n              // $router.push({\n              //   path: \"/displayInfo\",\n              //   query: {query: params.data.name}\n              // })\n              $search.to_display2(\"1\"+\",\"+params.data.name)\n         // }\n        })\n        // myChart.on(\"click\", function (params) {\n        //   // window.open(\"https://www.baidu.com/baidu?wd=\" + );\n        //   $search.to_display(params.data.name)\n        // })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* max-height: 400px; */\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>\n"]}]}