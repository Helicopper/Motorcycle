{"remainingRequest":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/sun.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/sun.vue","mtime":1550394936133},{"path":"/var/www/html/ai-project/node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nlet echarts = require('echarts');\nexport default {\n    name: \"sun\",\n    props: {\n        items: {\n            type: Object,\n            default () {\n                return {\n                    \"test\": \"test\"\n                }\n            }\n        },\n        keyWord: {\n            type:String,\n            default() {\n                return \"test\"\n            }\n        }\n    },\n    data() {\n        return {\n            // tabItem:\"Paper\"\n        }\n    },\n    mounted() {\n        this.start_draw();\n    },\n    // watch:{\n    //     items:function() {\n    //         // this.draw_linefold();\n    //         console.log(\"watch items:\"+ items);\n    //     },\n    //     deep:true\n    // },\n    // updated:function() {\n    //     this.$nextTick(function(){\n    //         console.log(\"updated!\");\n    //         this.start_draw();\n    //     })\n    // },\n    methods: {\n        start_draw() {\n            // let key = [];\n            // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n            let itemData = this.items;\n            // console.log(\"itemData=\"+JSON.stringify(itemData));\n            for (var i in itemData){\n                // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                let id = this.keyWord+\"_\"+i;\n                // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                this.draw_sun(id,itemData[i][\"data\"]);\n            }\n        },\n        draw_sun(id,data) {\n            let chart = document.getElementById(id);\n            // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n            var initial = function () {\n                // 根据想要的效果调整的公式，不是固定的\n                chart.style.width = (window.innerWidth/4)+80+\"px\";\n                // console.log(\"initial!!\")\n            }\n            initial();\n            let myChart = echarts.init(chart);\n\n            const option = {\n                title: {\n                    text: \"title\",\n                    // subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\n                    textStyle: {\n                        fontSize: 14,\n                        align: 'center'\n                    },\n                    // subtextStyle: {\n                    //     align: 'center'\n                    // },\n                    // sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\n                },\n                tooltip: {\n                    trigger: 'item',\n                    backgroundColor : 'rgba(0,0,250,0.2)',\n                    formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                },\n                series: {\n                    type: 'sunburst',\n                    highlightPolicy: 'ancestor',\n                    data: data,\n                    radius: [0, '95%'],\n                    sort: null,\n                    levels: [{}, {\n                        r0: '0%',\n                        r: '35%',\n                        itemStyle: {\n                            borderWidth: 2\n                        },\n                        label: {\n                            rotate: 'tangential'\n                        }\n                    }, {\n                        r0: '40%',\n                        r: '48%',\n                        label: {\n                            //align: 'right',\n                            position:'outside',\n                            padding:3\n                        },\n                        itemStyle:{\n                            borderWidth:4\n                        }\n                    }]\n                },\n                color: [\"#60acfc\",\"#32d3eb\",\"#5bc49f\",\"#feb64d\",\"#ff7c7c\",\"#9287e7\"]\n            };\n\n            myChart.setOption(option);\n\n            // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n            // window.onresize = function(){\n            //     console.log(\"window resize!\")\n            //     initial();\n            //     myChart.resize();\n            //     console.log(\"myChart resize!\")\n            // }\n\n            // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n            window.addEventListener('resize', function () {\n                initial();\n                myChart.resize()\n            })\n\n            // 这种写法无法实现自适应，不知道为什么\n            // window.onresize = (\"resize\",function() {\n            //     initial();\n            //     echart.resize()\n            // })\n            myChart.on(\"click\",function(params){\n                //console.log(params);\n                window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n            })\n        }\n    }\n}\n",{"version":3,"sources":["sun.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sun.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n<div>\n    <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <!-- <p>{{index}},{{items[index][\"title\"]}}</p> -->\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs>\n</div>\n</template>\n<script>\n\n    let echarts = require('echarts');\n    export default {\n        name: \"sun\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                // let key = [];\n                // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (var i in itemData){\n                    // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_sun(id,itemData[i][\"data\"]);\n                }\n            },\n            draw_sun(id,data) {\n                let chart = document.getElementById(id);\n                // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n                var initial = function () {\n                    // 根据想要的效果调整的公式，不是固定的\n                    chart.style.width = (window.innerWidth/4)+80+\"px\";\n                    // console.log(\"initial!!\")\n                }\n                initial();\n                let myChart = echarts.init(chart);\n\n                const option = {\n                    title: {\n                        text: \"title\",\n                        // subtext: 'Source: https://worldcoffeeresearch.org/work/sensory-lexicon/',\n                        textStyle: {\n                            fontSize: 14,\n                            align: 'center'\n                        },\n                        // subtextStyle: {\n                        //     align: 'center'\n                        // },\n                        // sublink: 'https://worldcoffeeresearch.org/work/sensory-lexicon/'\n                    },\n                    tooltip: {\n                        trigger: 'item',\n                        backgroundColor : 'rgba(0,0,250,0.2)',\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n                    },\n                    series: {\n                        type: 'sunburst',\n                        highlightPolicy: 'ancestor',\n                        data: data,\n                        radius: [0, '95%'],\n                        sort: null,\n                        levels: [{}, {\n                            r0: '0%',\n                            r: '35%',\n                            itemStyle: {\n                                borderWidth: 2\n                            },\n                            label: {\n                                rotate: 'tangential'\n                            }\n                        }, {\n                            r0: '40%',\n                            r: '48%',\n                            label: {\n                                //align: 'right',\n                                position:'outside',\n                                padding:3\n                            },\n                            itemStyle:{\n                                borderWidth:4\n                            }\n                        }]\n                    },\n                    color: [\"#60acfc\",\"#32d3eb\",\"#5bc49f\",\"#feb64d\",\"#ff7c7c\",\"#9287e7\"]\n                };\n\n                myChart.setOption(option);\n\n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n                // 这种写法无法实现自适应，不知道为什么\n                // window.onresize = (\"resize\",function() {\n                //     initial();\n                //     echart.resize()\n                // })\n                myChart.on(\"click\",function(params){\n                    //console.log(params);\n                    window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                })\n            }\n        }\n    }\n</script>\n<style>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n  }\n  .tabs {\n      box-shadow:0 2px 4px 0 rgba(0,0,0,0.1), 0 3px 10px 0 rgba(0,0,0,0.15);\n      padding:10px;\n      /* border-radius: 5px; */\n  }\n</style>"]}]}