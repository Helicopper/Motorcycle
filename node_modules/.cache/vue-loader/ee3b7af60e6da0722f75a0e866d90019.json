{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_radar.vue?vue&type=style&index=0&id=3fa8607b&scoped=true&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_radar.vue","mtime":1586267886000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .blank{\n\t\twidth:600px;\n\t\theight:550px;}\n\t\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n",{"version":3,"sources":["graph_radar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqRA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graph_radar.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <div class=\"hellotheworld\">\n\t<div class=\"wrap\">\n\t\t<aside class=\"left\">\n\t\t\t<p>figure1/4</p>\n\t\t\t<div class=\"name\">竞价词均价对比</div>\n\t\t\t<ul>\n\t\t\t\t<li>类型：雷达图</li>\n\t\t\t\t<li>轴：竞价词</li>\n\t\t\t\t<li>放射线：均价</li>\n\t\t\t</ul>\n\t\t\t<div class=\"texts\">图片描述：展示[广告商]高投入参与竞价的[竞价词]，并通过放射线展示其历史最高均价，您可以通过此图了解到[广告商]参与竞价的深度与趋势，锁定[广告商]主要竞价方向，个性化推荐替补竞价词或其他相关竞价词。</div>\n\t\t</aside>\n\t\t<section class=\"right\">\n\t\t\t<el-tabs type=\"border-card\">\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n\t\t\t  </el-tab-pane>\n\t\t\t</el-tabs>\n\t\t</section>\n\t</div>\n\t<div class=\"blank\"></div>\n  </div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n    export default {\n        name: \"radar\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord: {\n                type:String,\n                default() {\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n       \n        methods: {\n            start_draw() {\n                // let key = [];\n                // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (var i in itemData){\n                    // console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_radar(id,itemData[i]);\n                }\n            },\n            draw_radar(id,data) {\n                let chart = document.getElementById(id);\n                var initial = function () {\n                    // 根据想要的效果调整的公式，不是固定的\n                    // chart.style.width = (window.innerWidth/4)+80+\"px\";\n                    \n                    // 获取 chart 的父父结点chartParent，再根据其算宽度\n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n\n                let myChart = echarts.init(chart);\n                let title = data['title'];\n                let graph_data = data['data'];\n               \n                //console.log(graph_data);\n                let year = []; //图例，同时也是key值数组\n                let indicatorName = []; //存放name值\n                let indicator = [];  //赋给echarts的indicator\n                let seriesData = []; //json对象数组，每一个json对象包含name和value数组\n                let seriesValue = []; //遍历时临时数组，结束一轮遍历之后赋值给seriesData\n                let seriesName = [];\n                let max = 0; //所有value的最大值\n                let series = []; //赋给echarts的series\n                let j = 0;//计数器\n                let valuei=[];\n                for (var key in graph_data){\n                    //year.push(key);\n                    var oneyear = graph_data[key];\n                     //console.log(\"oneyear\")\n                     //console.log(oneyear);\n                    //for (var i=0; i<oneyear.length; i++){\n                        if(max<oneyear.value){max=oneyear.value};\n                        seriesValue.push(oneyear.value);\n                        seriesName.push(oneyear.name);\n                        indicatorName.push(oneyear.name);\n                        valuei.push(oneyear.value);\n                        //if(j==0){indicatorName.push(oneyear.name);}\n                    //}\n                    j++;\n                    \n                    seriesData.push({\n                        value:seriesValue\n                    })\n                  \n                    seriesValue = [];\n                    seriesName = [];\n                };\n                //console.log(\"seriesData\");\n                    //console.log(seriesData);\n                \n                //console.log(indicatorName);\n                for(var i=0; i<indicatorName.length; i++){\n                    indicator.push({\n                        text:indicatorName[i],\n                        max:max\n                    })\n                }\n                console.log(\"valuei\");\n                console.log(valuei);\n                console.log(\"seriesData[0].value\");\n                console.log(seriesData[0].value);\n               \n                    series.push({\n                        name:'参与竞争的竞价词',\n                        type: 'radar',\n                        symbol: 'none', //拐角点是否显示。默认显示圆形的点 | \"rect\"显示方形点\n                        symbolSize:5,  //拐角点的大小，等于0不显示\n                 \n                        emphasis: {\n                            areaStyle: {\n                                // color: 'rgba(0,250,0,0.3)', //鼠标移动到数据区域内时显示的颜色\n                            }\n                        },\n                        \n                        lineStyle:\n                        {\n                            color:'#5F9EA0'\n                        },\n\n                        itemStyle: {\n                            color: '#5F9EA0'\n                        },\n                        areaStyle: {\n                            opacity: 0.4\n                        },                   \n                        data:[\n                        {\n                            //value: seriesData[0].value,\n                            value: valuei,\n                            //name:\"bidword1\"\n                        }\n                       \n                           \n                        ]\n                    });\n                console.log(\"series\");\n                console.log(series);\n\n                const option = {\n                    title: {\n                        text: title,\n                        top: 10,\n                        left: 10\n                    },\n                    tooltip: {\n                        trigger: 'item',\n                        backgroundColor : 'rgba(0,0,250,0.2)'\n                    },\n                    legend: {\n                        type: 'scroll',\n                        bottom: 10,\n                        data: year\n                    },\n                     toolbox: {\n                              show: true,\n                              feature: {\n                                  saveAsImage: {\n                                      show: true,\n                                      type: \"png\",\n                                      pixelRatio: 3\n                                  },\n                                  restore: {\n                                      show: true\n                                    }\n                              }\n                          },\n                 \n                    radar: {\n                        shape: 'circle',\n                        indicator:indicator\n                    },\n                    \n                    splitNumber: 5,\n                    splitLine: {\n                        lineStyle: {\n                            color: [\n                                'rgba(238, 197, 102, 0.1)', 'rgba(238, 197, 102, 0.2)',\n                                'rgba(238, 197, 102, 0.4)', 'rgba(238, 197, 102, 0.6)',\n                                 'rgba(238, 197, 102, 0.8)', 'rgba(238, 197, 102, 1)'\n                            ].reverse()\n                        }\n                    },\n                    splitArea: {\n                        show: false\n                    },\n                     axisLine: {\n                        lineStyle: {\n                            color: 'rgba(238, 197, 102, 0.5)'\n                        }\n                    },\n                    triggerEvent:true,  //配置文字绑定点击事件！\n                     \n                    series : series, //具体格式见上方series的处理过程\n                    //color: [\"#60acfc\",\"#32d3eb\",\"#5bc49f\",\"#feb64d\",\"#ff7c7c\",\"#9287e7\"] //每一个数据区域的颜色，循环显示\n                };\n\n                myChart.setOption(option);\n\n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n                // 这种写法无法实现自适应，不知道为什么\n                // window.onresize = (\"resize\",function() {\n                //     initial();\n                //     echart.resize()\n                // })\n                myChart.on(\"click\",function(params){\n                    // console.log(params);\n                    // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                    if(params['componentType'] == 'radar'){\n                        // $router.push({\n                        //     path:\"/displayInfo\",\n                        //     query:{query:params['name'].toLowerCase()}\n                        // })\n                        $search.to_display(params['name'].toLowerCase())\n                    }\n                    if(params['componentType'] == 'series'){\n                        // $router.push({\n                        //     path:\"/displayInfo\",\n                        //     query:{query:params['data']['name'].toLowerCase()}\n                        // })\n                        $search.to_display(params['data']['name'].toLowerCase())\n                    }\n\n                })\n            },\n            // set_color(){\n            //     let testcolor = [\"rgb(129, 212, 250)\",\"rgb(239, 154, 154)\",\"rgb(128, 203, 196)\",\"rgb(129, 199, 132)\",\"rgb(156, 204, 101)\",\"rgb(212, 225, 87)\",\"rgb(255, 213, 79)\",\"rgb(255, 167, 38)\",\"rgb(255, 110, 64)\",\"rgb(161, 136, 127)\",\"rgb(248, 187, 208)\",\"rgb(128, 203, 196)\",\"rgb(209, 196, 233)\"]\n            //     let num = Math.floor(Math.random() * testcolor.length);\n            //     return testcolor[num]\n            // }\n        }\n    }\n</script>\n<style scoped>\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .blank{\n\t\twidth:600px;\n\t\theight:550px;}\n\t\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n</style>\n"]}]}