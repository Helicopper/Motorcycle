{"remainingRequest":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_tree.vue?vue&type=style&index=0&id=7f3f482c&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_tree.vue","mtime":1550312809736},{"path":"/var/www/html/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  min-height: 300px;\n  /* height: 400px; */\n}\n",{"version":3,"sources":["graph_tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA","file":"graph_tree.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <div>\n    <div class=\"graph\" :id=\"gId\" v-show=\"ifshow\"></div>\n  </div>\n</template>\n<script>\n  let echarts = require('echarts')\n\n  export default {\n    props: {\n      // 图的容器 div 的 id\n      gId: {\n        type: String,\n        // 必填\n        required: true\n      },\n      // 图的标题\n      gTitle: {\n        type: String,\n        default: \"Title\"\n      },\n      // 图的副标题\n      gSubtitle: {\n        type: String,\n        default: \"Sub Title\"\n      },\n      // 图的数据\n      gData: {\n        type: Object,\n        // required: true\n      },\n      // 是否显示\n      gShow: {\n        type: Boolean,\n        default: true\n      }\n    },\n    data() {\n      return {\n        // title: this.gTitle,\n        // ifshow: this.gShow\n      }\n    },\n    mounted() {\n      // 判断是否此图显示\n      if (this.gShow) {\n        this.draw();\n      }\n    },\n    computed: {\n      ifshow() {\n        return this.gShow\n      },\n      get_graph_data() {\n        let this_graph_data = (this.$bus.get_result_graph())[this.gId]\n        if (this_graph_data)\n          return this_graph_data\n        else {\n          // 若无该图数据，则不显示\n          this.ifshow = false;\n          console.log(\"无该图数据\");\n        }\n      },\n    },\n    methods: {\n      // 画图\n      draw() {\n        // 基于准备好的dom，初始化echarts实例\n        let myChart = echarts.init(document.getElementById(this.gId));\n\n        myChart.setOption({\n          title: {\n            text: \"树图\",\n            subtext: \"副标题\",\n            show: true,\n          },\n          tooltip: {\n            trigger: 'item',\n            triggerOn: 'mousemove'\n          },\n          legend: {\n            top: '2%',\n            left: '3%',\n            orient: 'vertical',\n            data: {\n              // 单棵树的名字\n              name: 'tree2',\n              icon: 'rectangle'\n            },\n          },\n          series: {\n            type: 'tree',\n            name: 'test-tree',\n            // top: '20%',\n            right: '20%',\n            // bottom: '22%',\n            left: '10%',\n\n            // 输入数据\n            // 若series_data最外层是对象{}，则要加一层[]\n            data: [this.get_graph_data],\n\n            // 可以设置回调函数 (value: Array|number, params: Object) => number|Array\n            symbolSize: 10,\n\n            label: {\n              position: 'left',\n              verticalAlign: 'middle',\n              align: 'right'\n            },\n\n            leaves: {\n              label: {\n                position: 'right',\n                verticalAlign: 'middle',\n                align: 'left'\n              }\n            },\n\n            emphasis: {\n              itemStyle: {\n                color: \"#ff4040\",\n                // borderColor: \"#555\",\n              },\n              label: {\n                fontWeight: \"bold\",\n                // fontSize:20,\n              },\n              lineStyle: {\n                color: \"#fff\",\n                width: 2,\n              }\n            },\n\n            // 树的初始层数，从0开始\n            // initialTreeDepth: 2,\n            // 子树折叠和展开的交互\n            expandAndCollapse: true,\n            // 初始动画的时长\n            animationDuration: 300,\n            // 数据更新动画的时长。\n            animationDurationUpdate: 750\n          }\n\n        });\n\n        // 点击事件\n        myChart.on('click', function (params) {\n          window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.name));\n        });\n        // 图表自适应\n        window.addEventListener('resize', function () {\n          myChart.resize();\n        })\n        // window.onresize = myChart.resize;\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    /* height: 400px; */\n  }\n</style>"]}]}