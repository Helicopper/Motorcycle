{"remainingRequest":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/ssd1/gfy/ai-project/src/components/graphs/graph_linefold3.vue?vue&type=style&index=0&id=3d0de475&scoped=true&lang=css&","dependencies":[{"path":"/ssd1/gfy/ai-project/src/components/graphs/graph_linefold3.vue","mtime":1585465962000},{"path":"/ssd1/gfy/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":1574947025000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.7.0@vue-loader/lib/loaders/stylePostLoader.js","mtime":1574947006000},{"path":"/ssd1/gfy/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":1574947004000},{"path":"/ssd1/gfy/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":1574947018000},{"path":"/ssd1/gfy/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":1574947026000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  .wrap{\n  \twidth:900px;\n  \tmargin:0 auto;\n  \tposition: relative;\n\t}   \n  \n  .left{\n\t\twidth:300px;\n\t\theight:500px;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tleft:0;\n\t\tmargin: 0% -3%;\n\t\tbackground: #E1E1E1;\n\t\tborder:7px solid #FFFFFF;}\n  \n  .right{\n\t\twidth:600px;\n\t\theight:500px;\n\t\tbackground: #dbeef3;\n\t\tposition: absolute;\n\t\ttop:0;\n\t\tright:0;\n\t\tmargin: 0% -3%;\n\t\tborder:7px solid #FFFFFF;}\n\n  .name{\n\t\tdisplay: inline-block;\n\t\tfont-size: 50px;\n\t\tfont-weight: 700;\n\t\tbackground: #f5f5f5;\n\t\tpadding: 25px;\n\t\twidth:100%;\n\t\ttext-align: center;}\n\t\t\n\tp{\n\t\tfont-size:12px;\n\t\ttext-align:center;\n\t\tcolor: #999999;}\n\t\t\n\tbody{\n\tbackground:#F2F2F2;}\n   \n  .left ul {\n    list-style: none;\n    margin: 25px 30px 15px 30px;}\n\n  .left li {\n    padding: 10px 0;\n\tfont-size: 13px;\n    border-bottom: 1px solid #999999;\n\ttext-align: center;}\n\t\n   .texts{\n\t   width:300px;\n\t   height:auto;\n\t   font-size: 14px;\n\t   padding: 25px;\n\t   font-family: \"arial black\";\n   }\n",{"version":3,"sources":["graph_linefold3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"graph_linefold3.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n<div>\n    <!-- <el-tabs v-model=\"tabItem\" type=\"border-card\">\n  <el-tab-pane label=\"Paper\">\n      <div  v-if=\"'Paper' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"News\">\n      <div v-if=\"'News' === tabItem\" class=\"graph\" id=\"linefold\"></div>\n  </el-tab-pane>\n  <el-tab-pane label=\"Patent\">\n      <p v-if=\"'Patent' === tabItem\">ttttttttttttttttttttttt</p>\n  </el-tab-pane>\n</el-tabs> -->\n\t<div class=\"wrap\">\n\t\t<aside class=\"left\">\r\n\t\t\t<p>figure1</p>\r\n\t\t\t<div class=\"name\">图片名称</div>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>类型：折线图</li>\r\n\t\t\t\t<li>X轴：时间</li>\r\n\t\t\t\t<li>Y轴：报价变化</li>\r\n\t\t\t</ul>\r\n\t\t\t<div class=\"texts\">图片描述：我就随便写一大堆话哈少就写多少啊啊啊啊啊事实上收拾收拾没什么别的意思看看会不会换行我爱写多少就写多少哼哼唧唧嘿嘿嘿</div>\r\n\t\t</aside>\n\t\t<section class=\"right\">\r\n\t\t\t<el-tabs type=\"border-card\">\r\n\t\t\t  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\r\n\t\t\t\t  <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\r\n\t\t\t  </el-tab-pane>\r\n\t\t\t</el-tabs>\r\n\t\t</section>\n\t</div>\n<!--<el-tabs type=\"border-card\">\n  <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n      <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n  </el-tab-pane>\n</el-tabs>\n-->\n</div>\n</template>\n<script>\n    import $search from \"./../../util/search.js\"\n    let echarts = require('echarts');\n\n    export default {\n        name: \"linefold3\",\n        props: {\n            items: {\n                type: Object,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyWord:{\n                type:String,\n                default(){\n                    return \"keyString\"\n                }\n            }\n        },\n        data() {\n            return {\n                 //tabItem:\"AllTab\"\n            }\n        },\n        mounted() {\n            // this.draw_linefold();\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                // let key = [];\n                // console.log(\"start_draw! this.items=\"+JSON.stringify(this.items));\n                let itemData = this.items;\n                // console.log(\"itemData=\"+JSON.stringify(itemData));\n                for (let i in itemData){\n                    console.log(\"key :\"+this.keyWord+\"_\"+i);\n                    let id = this.keyWord+\"_\"+i;\n                    // console.log(\"before draw_linefold();id:\"+id+\"  data:\"+itemData[i]);\n                    this.draw_linefold(id,itemData[i]);\n                }\n            },\n            draw_linefold(id, data) {\n\n                let title = data['title'];\n                let testdata = data['data'];\n                let chart = document.getElementById(id);\n                \n                // 给echart初始化宽度，替代系统的初始值100px。参考博客：https://unordered.org/timelines/5a0c74067b000000\n                var initial = function () {\n                  \n                    \n                    // 获取 chart 的父父结点chartParent，再根据其算宽度\n                    let chartParent = chart.parentNode.parentNode;\n                    chart.style.width = chartParent.clientWidth - 30 + \"px\";\n                    chart.style.margin = \"0 auto\";\n                    chart.style.height = (chartParent.clientWidth *0.75 - 30) + \"px\";\n                }\n                initial();\n                \n                // 初始化图的宽度\n                // chart.style.width = this.initial_style(chart);\n\n                let myChart = echarts.init(chart);\n                let datakey = [];\n                var year = [];\n                var series = [];\n                var j = 0;\n                var colors=['rgb(180,227,205)'];\n                for (var key in testdata) {\n                    datakey.push(key);\n                    var value = [];\n                    for (var i in testdata[key]) {\n                        if (j == 0) {\n                            year.push(i);\n                        }\n                        var oneword = testdata[key];\n                        value.push(oneword[i]);\n                    }\n                    j++;\n                    if(j>4) break;\n                    //console.log(value)\n                    series.push({\n                        name: key,\n                        type: 'line',\n                        data: value,\n                        smooth: false,\n\n                        itemStyle : {\n                            normal : {\n                              \n                                lineStyle : {  //线的颜色\n                                        color :'rgb(129,179,185)',\n                                        width:3\n                                },\n                                color : '#53A9C3',\n                                //以及在折线图每个日期点顶端显示数字\n                                label: {      \n                                    show: false,\n                                    position: 'top',\n                                    textStyle: {\n                                           // color: 'white'\n                                }\n                            }\n                        }\n                    },\n                    markPoint: {\n                    data: [\n                        {type: 'max', name: '最大值'},\n                        {type: 'min', name: '最小值'}\n                    ],\n                    itemStyle:{\n                            color: 'rgb(129,179,185)'\n                        }\n                    },\n                  \n\n                    })\n                }\n \n                const option = {\n                    title: {\n                        text: title\n                    },\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                   \n                    grid: {\n                        left: '0%',\n                        right: '3%',\n                        bottom: '0%',\n                        top:\"18%\",\n                        containLabel: true\n                    },\n                    toolbox: {\n                        feature: {\n                            dataZoom: {},\n                            saveAsImage: {},\n                        },\n                    },\n                    xAxis: {\n                        type: 'category',\n                        boundaryGap: false,\n                        data: year\n                    },\n                    yAxis: {\n                        type: 'value'\n                        // type:'log'\n                    },\n                    series: series,\n                    //backgroundColor:'#F0F5F8',\n                    symbolSize:5\n\n                };\n\n                myChart.setOption(option);\n\n        \n                window.addEventListener('resize', function () {\n                    initial();\n                    myChart.resize()\n                })\n\n            \n              \n            }\n        }\n    }\n</script>\n\n<style scoped>\n  .wrap{\r\n  \twidth:900px;\r\n  \tmargin:0 auto;\r\n  \tposition: relative;\r\n\t}   \r\n  \r\n  .left{\r\n\t\twidth:300px;\r\n\t\theight:500px;\r\n\t\tposition: absolute;\r\n\t\ttop:0;\r\n\t\tleft:0;\r\n\t\tmargin: 0% -3%;\r\n\t\tbackground: #E1E1E1;\r\n\t\tborder:7px solid #FFFFFF;}\r\n  \r\n  .right{\r\n\t\twidth:600px;\r\n\t\theight:500px;\r\n\t\tbackground: #dbeef3;\r\n\t\tposition: absolute;\r\n\t\ttop:0;\r\n\t\tright:0;\r\n\t\tmargin: 0% -3%;\r\n\t\tborder:7px solid #FFFFFF;}\r\n\r\n  .name{\r\n\t\tdisplay: inline-block;\r\n\t\tfont-size: 50px;\r\n\t\tfont-weight: 700;\r\n\t\tbackground: #f5f5f5;\r\n\t\tpadding: 25px;\r\n\t\twidth:100%;\r\n\t\ttext-align: center;}\r\n\t\t\r\n\tp{\r\n\t\tfont-size:12px;\r\n\t\ttext-align:center;\r\n\t\tcolor: #999999;}\r\n\t\t\r\n\tbody{\r\n\tbackground:#F2F2F2;}\r\n   \r\n  .left ul {\r\n    list-style: none;\r\n    margin: 25px 30px 15px 30px;}\r\n\r\n  .left li {\r\n    padding: 10px 0;\r\n\tfont-size: 13px;\r\n    border-bottom: 1px solid #999999;\r\n\ttext-align: center;}\r\n\t\r\n   .texts{\r\n\t   width:300px;\r\n\t   height:auto;\r\n\t   font-size: 14px;\r\n\t   padding: 25px;\r\n\t   font-family: \"arial black\";\r\n   }\n</style>\n"]}]}