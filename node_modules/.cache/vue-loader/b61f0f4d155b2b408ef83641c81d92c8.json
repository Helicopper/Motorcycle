{"remainingRequest":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_river.vue?vue&type=style&index=0&id=063ac4fc&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_river.vue","mtime":1550739464587},{"path":"/var/www/html/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.graph {\n  width: 100%;\n  min-height: 300px;\n  max-height: 400px;\n}\n\n.tabs {\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n  padding: 10px;\n  /* border-radius: 5px; */\n}\n",{"version":3,"sources":["graph_river.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"graph_river.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n  <!-- 主题河流图 -->\n  <div>\n    <el-tabs type=\"border-card\">\n      <el-tab-pane v-for=\"(data, index) in items\" :key=index :label=\"index\">\n        <div class=\"graph\" :id=\"keyWord+'_'+index\"></div>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n<script>\n  let echarts = require('echarts');\n  export default {\n    name: \"river\",\n    props: {\n      items: {\n        type: Object,\n        default () {\n          return {\n            \"test\": \"test\"\n          }\n        }\n      },\n      keyWord: {\n        type: String,\n        default () {\n          return \"keyString\"\n        }\n      }\n    },\n    data() {\n      return {}\n    },\n    mounted() {\n      this.start_draw();\n    },\n    methods: {\n      start_draw() {\n        let itemData = this.items;\n        for (let i in itemData) {\n          console.log(\"key :\" + this.keyWord + \"_\" + i);\n          let id = this.keyWord + \"_\" + i;\n          this.draw_river(id, itemData[i]);\n        }\n      },\n      draw_river(id, data) {\n        // console.log(JSON.stringify(data))\n        let graph_title = data.title;\n        let graph_data = data.data;\n        console.log(graph_data);\n\n        // 初始化\n        let chart = document.getElementById(id);\n\n        var initial = function () {\n          let chartParent = chart.parentNode.parentNode;\n          chart.style.width = chartParent.clientWidth - 30 + \"px\";\n          // chart.style.height = (chartParent.clientWidth - 30) + \"px\";\n          chart.style.margin = \"0 auto\";\n        }\n        initial();\n\n        // echarts 实例初始化\n        let myChart = echarts.init(chart);\n\n        let option = {\n          title: {\n            text: graph_title,\n            subtext: \"\",\n            x: \"1%\",\n            y: \"1%\",\n          },\n          tooltip: {\n            trigger: \"axis\",\n            axisPointer: {\n              type: 'line',\n              lineStyle: {\n                color: 'rgba(0,0,0,0.5)',\n                width: 1,\n                type: 'solid'\n              }\n            }\n          },\n          legend: {\n            show: false\n          },\n          singleAxis: {\n            top: \"10%\",\n            bottom: \"10%\",\n            type: 'time',\n            min: 'dataMin',\n            max: 'dataMax',\n            axisTick: {\n              interval: 0\n            },\n            axisLabel: {},\n            axisPointer: {\n              animation: true,\n              label: {\n                show: true\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                type: 'dashed',\n                opacity: 0.2\n              }\n            }\n          },\n          series: [{\n            type: 'themeRiver',\n            label: {\n              show: true,\n              position: \"insideTopLeft\",\n              fontWeight: \"bold\",\n              // fontSize: 12,\n              // offset: [50, 0]\n              // color: \"auto\"\n            },\n            itemStyle: {},\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 20,\n                shadowColor: 'rgba(0, 0, 0, 0.8)'\n              }\n            },\n            data: graph_data\n          }]\n        };\n\n        myChart.setOption(option);\n\n        window.addEventListener('resize', function () {\n          initial();\n          // chart.style.width = this.initial_style(chart);\n          myChart.resize()\n        })\n\n        myChart.on(\"click\", function (params) {\n          window.open('https://www.baidu.com/s?wd=' + encodeURIComponent(params.data.name));\n        })\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .graph {\n    width: 100%;\n    min-height: 300px;\n    max-height: 400px;\n  }\n\n  .tabs {\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1), 0 3px 10px 0 rgba(0, 0, 0, 0.15);\n    padding: 10px;\n    /* border-radius: 5px; */\n  }\n</style>"]}]}