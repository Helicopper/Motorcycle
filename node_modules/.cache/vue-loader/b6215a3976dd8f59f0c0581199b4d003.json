{"remainingRequest":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js??vue-loader-options!/var/www/html/ai-project/src/components/graphs/graph_wordcloud.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/var/www/html/ai-project/src/components/graphs/graph_wordcloud.vue","mtime":1551265411184},{"path":"/var/www/html/ai-project/node_modules/_css-loader@1.0.1@css-loader/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/ai-project/node_modules/_vue-loader@15.6.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.wordcloud {\n    min-width:100px;\n    height:300px;\n}\n",{"version":3,"sources":["graph_wordcloud.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4KA;AACA;AACA;AACA","file":"graph_wordcloud.vue","sourceRoot":"src/components/graphs","sourcesContent":["<template>\n\n    <!-- <el-tabs type=\"border-card\">\n    <el-tab-pane v-for=\"(data,index) in items\" :key=index :label=\"index\">\n        <p>{{index}},{{items[index][\"title\"]}}</p>\n        <div class=\"graph\" :id=\"'wordcloud'+'_'+index\"></div>\n    </el-tab-pane>\n</el-tabs> -->\n<div class=\"wordcloud\" :id=\"'wordcloud'+'_'+keyString\"></div>\n\n</template>\n<script>\n// 直接导入地理图所需的json文件，注意一定记得register这个文件\nimport worldJson from 'echarts/map/json/world.json'\n\n    let echarts = require('echarts');\n    require('echarts-wordcloud');\n\n    export default {\n        name: \"wordcloud\",\n        props: {\n            items: {\n                type: Array,\n                default () {\n                    return {\n                        \"test\": \"test\"\n                    }\n                }\n            },\n            keyString:{\n                type:String,\n                default(){\n                    return \"test\"\n                }\n            }\n        },\n        data() {\n            return {\n                // tabItem:\"Paper\"\n            }\n        },\n        mounted() {\n            this.start_draw();\n        },\n        // watch:{\n        //     items:function() {\n        //         // this.draw_linefold();\n        //         console.log(\"watch items:\"+ items);\n        //     },\n        //     deep:true\n        // },\n        // updated:function() {\n        //     this.$nextTick(function(){\n        //         console.log(\"updated!\");\n        //         this.start_draw();\n        //     })\n        // },\n        methods: {\n            start_draw() {\n                let id = 'wordcloud'+'_'+ this.keyString;\n                this.draw_wordcloud(id,this.items);\n            },\n            draw_wordcloud(id,data) {\n                let chart = document.getElementById(id);\n                let myChart = echarts.init(chart);\n\n                // console.log(JSON.stringify(data))\n                const option = {\n                    // title: {\n                    //     text: title,\n                    //     top: 'top',\n                    //     // left: 'center'\n                    // },\n                    tooltip: {\n                        trigger: 'item',\n                        // formatter:\n                    },\n                    toolbox: {\n                        show: false,\n                        orient: 'vertical',\n                        x: 'right',\n                        y: 'center',\n                    },\n                        series: [{\n                        name: '词云',\n                        type: 'wordCloud',\n                        size: ['90%', '90%'],\n                        textRotation : [-90, 90],\n                        shape: 'circle',\n                        autoSize: {\n                            enable: true,\n                            minSize: 14\n                        },\n                        textStyle:{\n                            normal:{\n                                // 用这个函数会让一个会让所有的单词都是同一个颜色\n                                // color:this.$graphs.set_color()\n                                color:function () {\n                                    return 'rgb(' + [\n                                        Math.round(Math.random() * 160),\n                                        Math.round(Math.random() * 160),\n                                        Math.round(Math.random() * 160)\n                                        ].join(',') + ')';\n                                }\n                            },\n                            emphasis:{\n                                shadowBlur:10,\n                                shadowColor:'#333'\n                            }\n                        },\n                        // data:[\n                        //     {\n                        //         name: \"OFO小黄车\",\n                        //         value: 224,\n                        //         textStyle: this.createRandomItemStyle(0)\n                        //     },{\n                        //         name: \"车锁坏\",\n                        //         value: 2142,\n                        //         textStyle: this.createRandomItemStyle(1)\n                        //     },{\n                        //         name: \"不好骑行\",\n                        //         value: 12,\n                        //         textStyle: this.createRandomItemStyle(2)\n                        //     },{\n                        //         name: \"踏板不灵\",\n                        //         value: 99,\n                        //         textStyle: this.createRandomItemStyle(3)\n                        //     },{\n                        //         name: \"押金不退\",\n                        //         value: 20,\n                        //         textStyle: this.createRandomItemStyle(4)\n                        //     },{\n                        //         name: \"摩拜单车\",\n                        //         value: 1230,\n                        //         textStyle: this.createRandomItemStyle(5)\n                        //     },\n                        // ]\n                        data:data\n                    }]\n                \n                };\n\n                myChart.setOption(option);\n\n                // 当多个图形渲染时，调用以下方法只能实现最后一个图的自适应效果\n                // window.onresize = function(){\n                //     console.log(\"window resize!\")\n                //     initial();\n                //     myChart.resize();\n                //     console.log(\"myChart resize!\")\n                // }\n\n                // 生成多个图时实现全部都能自适应。参考博客：https://blog.csdn.net/qq_25816185/article/details/82414529\n                window.addEventListener('resize', function () {\n                    // initial();\n                    myChart.resize()\n                })\n\n                // 这种写法无法实现自适应，不知道为什么\n                // window.onresize = (\"resize\",function() {\n                //     initial();\n                //     echart.resize()\n                // })\n                myChart.on(\"click\",function(params){\n                    //console.log(params);\n                    // window.open(\"https://www.baidu.com/baidu?wd=\"+params.seriesName);\n                })\n            }\n        }\n    }\n</script>\n<style>\n.wordcloud {\n    min-width:100px;\n    height:300px;\n}\n</style>"]}]}